This howto is lifted straight from /text/simud_intro.txt. It is not perfect,
but is probably a little better than nothing.

NOTE: This section is out of date. The stuff on the 'dig' command works,
but not much else does.

Section Four: Building a Room
------------

Rooms are one of the simplest object types to build. You don't usually need
to write any special code to make a new room; rather, you build a room
out of existing objects and you customize the settings on those objects.

The first thing you need is somewhere to put the rooms that you will
build. For now, you should make a temporary area in the wizard's area.
Here's how:

: goto ;wizarea
: addarea myarea

You should probably replace "my" with your name, such as
"bobarea", "greendragonarea" or whatever. That way you won't conflict with
other new wizards who are also following this manual.

Note: The addarea command is the same as 'clone /world/area' and
then '@(area reference)->set_name("myarea")'. The addarea also assigns a
default utility description to the area.

Now that you have an area, go to it.

: goto ;wizarea;myarea

Of course, you should use the name of the area you created instead
of myarea. You are now in your own area! It probably looks something
like this:

A blank area
This is an area object, probably undefined.

You can fill out these fields later if you like -- no player is likely
to ever see them. Now that you have an area, let's make a room.

: addroom room1
==> [Notice] Room room1 created.
: goto room1
New room
This is a cubical, boring room, waiting to be described.

You've now made a room called 'room1' inside of ;wizarea;myarea. The
address of this room is ";wizarea;myarea;room1" (try to goto it if you
want to prove it to yourself).

Note: You could also type 'clone /world/room' and
'@(room ref)->set_name("room1")'. addroom is just a lot cleaner, and
does the same thing plus filling in some default values.

To get a full list of things you can set in the room, you should check the
online documentation (there are many, many things you can configure). For
now, I will just tell you how to set the description and add some exits.

The first description (called the "short" description) is used for players
in brief mode, and in long mode it is the title of the room. Short
descriptions should be a short phrase (not necessarily a complete
sentence), and only the first word should be capitalized. To set a
room's short description, type

call env set_short My very first room

The proper description is called the "long" description. You set
it roughly the same way:

call env set_long This room has four white walls and a brown, carpeted
floor. There is a doorway to the north.

(Do not push enter until you have typed the whole thing, or it won't
work). There are more convenient ways to write the long description, but
they don't work in all clients yet so aren't discussed here. If you type
'look' in your room now, it should look like this:

My very first room
This room has four white walls and a brown, carpeted floor. There is a
doorway to the north.

I wrote in my description that there is a doorway to the north, but there
isn't a working door yet. How do I add one? You *could* do this:

: goto env:env
(This will go back "out" into the area object)
: addroom room2
(Makes a new room, room2)
: goto room1
(Back into the room...)
: addexit north env;room2
(Adds an exit into room2, going north)
: north
(Actually go north through your new exit)
: addexit south env;room1
(Add an exit going south back into room1)
... set up the new room ...

While this is not too bad, there is an easier way! Simply type

: dig north room2

This will create a new room, call it room2, add a north exit to it in
room1, add a south exit back to room1 inside of room2, and move you to
room2. You can also use dig to tunnel exits between two existing
rooms. All that's left is for you to write the descriptions, and that is
something that I cannot teach you.

Note: You might be wondering about that "call" command. Good,
keep wandering; it'll be a large part of chapter six.

One last note: You are now able to create objects, but how do you get rid
of the things once you've made them? It's easy -- the command
is 'destruct'. If you need to know more, type 'help destruct'.
