Creating verbs:

To create your own verbs for testing out:

* Go to your home directory 'cd'
* Make a directory for verbs 'mkdir bin'
* Add that directory to your commands path
   'set bin_paths+=/home/yourname/bin'

To make an actual verb, simply create an object in that directory
that has a main() function. The function should take one
string parameter (or no parameters) and must return an integer
(int). For example, you could do this:

int main( string param ) {
   msg("Hello verb world! The parameter was " + param);
   return 1;
}

Verbs must return 1 if they succeed. If they return 0,
that means there was an error with the input. There may be another verb
with the same name that understands the input, so the MUD will keep on
looking for an appropriate verb if you return 0.

If you're getting the message 'I'm sorry, but I didn't understand that.' 
after your verb runs, you probably forgot to return 1.

If you do return 0, you may call 'notify_fail' to change the failure
message. For example:

int main( string param ) {
   if( param == "fail" ) {
      notify_fail("The verb failed.\n");
      return 0;
   }
   msg("Success!");
   return 1;
}

Unlike msg, notify_fail does not peg a \n onto the failure string,
so you must remember to put it there yourself. When main()
is called, this_player() is the person who performed the verb; that's
useful if the verb affects the player in some way, such as
this_player()->set_hp(99);