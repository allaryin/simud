Living(3)                                                            Living(3)



NNAAMMEE
       Living - Properties and behaviors possessed by all living objects.

SSYYNNOOPPSSIISS
       Inherits DDeesscc, DDiiccee, and IItteemm.

       Inherited by MMoonnsstteerr, and PPllaayyeerr.


   PPuubblliicc MMeetthhooddss
       void __ccrreeaattee__lliivviinngg ()
       string lliivviinngg__iinnffoo ()
       int qquueerryy__lliivviinngg ()
       int qquueerryy__iiss__lliivviinngg ()
       int qquueerryy__lleevveell ()
       int ccaallccuullaattee__lleevveell (int total_skills)
       int ccaallccuullaattee__sskkiillll__ttoottaall ()
       string qquueerryy__jjoobb__ttiittllee ()
       int qquueerryy__ssttaannccee ()
       int qquueerryy__ggeennddeerr ()
       object qquueerryy__ppaarrttyy__oobbjjeecctt ()
       int qquueerryy__rreeaaddiinneessss ()
       int rreeaaddiinneessss__rreeqquuiirreedd ()
       int qquueerryy__ssttrr__wwcc ()
       int qquueerryy__hhpp ()
       int qquueerryy__rreeccooggnniizzee (string nnaammee)
       mapping qquueerryy__nnaammeess__kknnoowwnn ()
       int qquueerryy__mmaannaa ()
       int qquueerryy__eenndduurraannccee ()
       int qquueerryy__ffoooodd ()
       int qquueerryy__ddrriinnkk ()
       int qquueerryy__aauuttoottaakkee ()
       string qquueerryy__aauuttooeeaatt ()
       string qquueerryy__aauuttooddrriinnkk ()
       int qquueerryy__ffoooodd__ccaappaacciittyy ()
       int qquueerryy__ddrriinnkk__ccaappaacciittyy ()
       int qquueerryy__wweeiigghhtt__ccaappaacciittyy ()
       int qquueerryy__ffoooodd__ppeerrcceenntt ()
       int qquueerryy__ddrriinnkk__ppeerrcceenntt ()
       varargs mixed qquueerryy__wwcc (string x)
       varargs mixed qquueerryy__aarrmmoouurr__aacc (string str)
       varargs mixed qquueerryy__aacc (string x)
       varargs mixed qquueerryy__aacc__mmoodd (string x)
       int qquueerryy__rreeaall__aacc ()
       int qquueerryy__aavveerraaggee__aacc ()
       int qquueerryy__ddeeaadd ()
       int qquueerryy__hheelldd ()
       int qquueerryy__bbuussyy ()
       int qquueerryy__wwiimmppyy ()
       int qquueerryy__ssooaakk ()
       int qquueerryy__hheeaall__ddeellaayy ()
       int qquueerryy__mmaannaa__hheeaall__ddeellaayy ()
       int qquueerryy__eenndd__hheeaall__ddeellaayy ()
       int qquueerryy__hhaass__bbpp (int bp)
       string qquueerryy__bbpp__nnaammee (int bp)
       int qquueerryy__aalliiggnnmmeenntt (int x)
       int qquueerryy__sskkiillll__lleevveell (string x)
       int qquueerryy__sskkiillll (string skill)
       int qquueerryy__sskkiillll__ccoosstt (string skill, int lleevveell)
       int qquueerryy__sskkiillll__ccaapp (string skill, int lleevveell)
       int qquueerryy__sskkiillll__ttoottaall__eexxpp (string x)
       int qquueerryy__sskkiillll__ccuurrrreenntt__eexxpp (string x)
       int qquueerryy__sskkiillll__mmaaxx__eexxpp (string x)
       mapping qquueerryy__sskkiillllss ()
       varargs string qquueerryy__aalliiggnnmmeenntt__ssttrriinngg (mixed *align)
       mixed qquueerryy__ttaarrggeett ()
       mixed qquueerryy__ttaarrggeettss ()
       void sseett__ttaarrggeettss (object *new_targets)
       int qquueerryy__ccoommbbaatt__mmooddee ()
       int qquueerryy__mmoonneeyy ()
       int qquueerryy__iinn__ccoommbbaatt ()
       int qquueerryy__mmaaxx__hhpp ()
       int qquueerryy__mmaaxxhhpp ()
       int qquueerryy__mmaaxx__mmaannaa ()
       int qquueerryy__mmaaxxmmaannaa ()
       int qquueerryy__mmaaxx__eenndduurraannccee ()
       int qquueerryy__mmaaxxeenndd ()
       varargs mixed qquueerryy__ttrruusstt (string x)
       mapping qquueerryy__kknnoowwnn__ssppeellllss ()
       mapping qquueerryy__kknnoowwnn__ffoorrmmss ()
       string qquueerryy__ffoorrmm ()
       varargs object qquueerryy__ffoorrmm__oobbjjeecctt (string form)
       mixed * qquueerryy__aaccttiioonn (int x)
       string qquueerryy__aaccttiioonn__nnaammee (int x)
       mixed * qquueerryy__aaccttiioonnss ()
       int qquueerryy__aaccttiioonn__eennaabblleedd (string act)
       string qquueerryy__ddiissttaanntt ()
       string qquueerryy__pplluurraall ()
       string qquueerryy__ssppeecciiffiicc ()
       string qquueerryy__llooookk ()
       int qquueerryy__ggeettttaabbllee ()
       int qquueerryy__ddrrooppppaabbllee ()
       object qquueerryy__rraaccee__oobbjjeecctt ()
       string qquueerryy__rraaccee ()
       string qquueerryy__ddeeffaauulltt__ddooiinngg ()
       string qquueerryy__ddooiinngg ()
       string qquueerryy__tthhrreeaatt__aaccttiioonn ()
       mapping qquueerryy__tthhrreeaatteenn (mapping path)
       int oonn__tthhrreeaatteenn (object victim, int x, int y)
       object iidd (string str)
       object * qquueerryy__ffoolllloowweerrss ()
       object * qquueerryy__lleeaaddeerrss ()
       void rreerroollll ()
       void sseett__nnaammeess__kknnoowwnn (mapping m)
       void aadddd__rreeccooggnniizzee (string nnaammee)
       void rreemmoovvee__rreeccooggnniizzee (string nnaammee)
       void sseett__sskkiillllss (mapping m)
       void sseett__ssttaannccee (int x)
       int cchhaannggee__ssttaannccee (int x)
       void sseett__rreeaaddiinneessss (int x)
       void sseett__hheelldd (int x)
       void sseett__bbuussyy (int x)
       void sseett__wwiimmppyy (int x)
       void sseett__ssooaakk (int x)
       void sseett__ttrruusstt (mapping x)
       void aadddd__ttrruusstt (string who)
       void rreemmoovvee__ttrruusstt (string who)
       int aadddd__ffoorrmm__aaccttiioonn (string form, string act)
       varargs void sseett__ffoorrmm (string x, int silent)
       void sseett__kknnoowwnn__ffoorrmmss (mapping m)
       void aadddd__ffoorrmm (string str)
       void rreemmoovvee__ffoorrmm (string str)
       void aaddoopptt__bbeesstt__ffoorrmm ()
       void sseett__hheeaall__ddeellaayy (int x)
       void sseett__mmaannaa__hheeaall__ddeellaayy (int x)
       void sseett__eenndd__hheeaall__ddeellaayy (int x)
       void sseett__ddeeffaauulltt__ddooiinngg (string s)
       varargs void sseett__ddooiinngg (string x, object targ)
       void sseett__hhpp (int x)
       void sseett__mmaannaa (int x)
       void sseett__eenndduurraannccee (int x)
       void sseett__eenndd (int x)
       void sseett__ffoooodd (int x)
       void sseett__ddrriinnkk (int x)
       void sseett__aauuttooeeaatt (string x)
       void sseett__aauuttooddrriinnkk (string x)
       void sseett__aauuttoottaakkee (int x)
       void sseett__pprroonnoouunn (mixed x)
       void aassssiimmiillaattee__sskkiillll__xxpp ()
       void ddeeccaayy__ffoooodd__aanndd__ddrriinnkk ()
       void ddeeccaayy__ffoooodd ()
       void ddeeccaayy__ddrriinnkk ()
       void sseett__rraaccee (string s)
       void rreeppaaiirr__sskkiillllss__mmaappppiinngg ()
       void sseett__sskkiillll (string skill, int x)
       void aadddd__sskkiillll (string skill, int x)
       varargs void sseett__aacc (mixed what, int amt)
       void sseett__aaccttiioonnss (mixed *x)
       varargs void sseett__wwcc (mixed what, int amt)
       void sseett__aaccttiioonn (int x, mixed *act)
       int ppoopp__aaccttiioonn ()
       int ppuusshh__aaccttiioonn (mixed *act)
       void sseett__aalliiggnnmmeenntt (int x, int y)
       void sseett__aalliiggnnmmeenntt__ssttrriinngg (string x)
       void aadddd__rreeaaddiinneessss (int x)
       void aadddd__hheelldd (int x)
       void aadddd__bbuussyy (int x)
       void aadddd__hhpp (int x)
       void aadddd__mmaannaa (int x)
       void aadddd__eenndduurraannccee (int x)
       void rreemmoovvee__sskkiillll (string skill)
       void aadddd__aalliiggnnmmeenntt (int x, int y)
       void aadddd__ggoooodd__aalliiggnnmmeenntt (int n)
       void aadddd__llaawwffuull__aalliiggnnmmeenntt (int n)
       void aadddd__wweeiigghhtt (int x)
       void aadddd__ffoooodd (int f)
       void aadddd__ddrriinnkk (int x)
       void sseett__lleevveell (int x)
       void sseett__jjoobb__ttiittllee (string x)
       void sseett__ggeennddeerr (int x)
       void sseett__ffoolllloowweerrss (object *x)
       void sseett__lleeaaddeerrss (object *x)
       void cchheecckk__ffoolllloowweerrss ()
       void cchheecckk__lleeaaddeerrss ()
       int aadddd__ffoolllloowweerr (object x)
       int aadddd__lleeaaddeerr (object x)
       int rreemmoovvee__ffoolllloowweerr (object x)
       int rreemmoovvee__lleeaaddeerr (object x)
       void ssttaarrtt__ccoommbbaatt (object enemy)
       void ccpprr ()
       ssttoopp__ccoommbbaatt ()
       object ddiiee ()
       void rreeccaallcc ()
       int wwaatteerr__lloossss (mapping wwcc)
       int ttaakkee__ddaammaaggee (mapping wwcc, int bp)
       int ttaakkee__ddaammaaggee__ppeerrcceenntt (mapping wwcc, int bp)
       void ddrroopp__iinnvvaalliidd__ttaarrggeettss ()
       void hheeaarrtt__bbeeaatt ()
       void oonn__iinnsseerrtt (object ob)
       void oonn__rreemmoovvee (object ob)
       varargs void pprraaccttiiccee__sskkiillll (string skill, int amt)
       varargs int sskkiillll__cchheecckk (string skill, int one, int two, int three)
       varargs int ssttaatt__cchheecckk (string stat, int one, int two, int three)
       object rreevviivvee ()
       ssaayy__aallll (string words, int indent)
       varargs void ssaayy__llooccaall (string words, int indent)
       varargs void mmssgg__llooccaall (string words, int indent)
       varargs void mmssgg__oobbsseerrvveerrss (string words, int indent)
       varargs int mmoovvee__ppllaayyeerr (mixed dest, string moveverb, string direction)
       void ddeellaayyeedd__wwaallkk (mixed exit_id)

       EEnnvviirroonnmmeenntt VVaarriiaabblleess
       Variables used for tracking miscellanous settings in the player.

           mixed qquueerryy__eennvv__vvaarr (string nnaammee)
           mixed qquueerryy__eennvv__vvaarrss ()
           void aadddd__eennvv__vvaarr (string var, mixed val)
           int rreemmoovvee__eennvv__vvaarr (string var)
           int rreemmoovvee__eennvv__vvaarr__iitteemm (string var, mixed val)
           void sseett__eennvv__vvaarrss (mapping m)
           int sseett__eennvv__vvaarr (string var, mixed val)

   PPuubblliicc AAttttrriibbuutteess
       int lleevveell
       string jjoobb__ttiittllee
       int ggeennddeerr
       mixed * aalliiggnnmmeenntt
       nosave int hheeaall__ccoouunntt
       nosave int mmaannaa__hheeaall__ccoouunntt
       nosave int eenndd__hheeaall__ccoouunntt
       nosave int aaccttiioonnss__tthhiiss__bbeeaatt
       int rreeaaddiinneessss
       mapping nnaammeess__kknnoowwnn
       int aacc
       mapping wwcc
       int hhpp
       int ddaammaaggee__ppeennddiinngg
       int mmaannaa
       int eenndduurraannccee
       int ffoooodd
       int ddrriinnkk
       mapping sskkiillllss
       mapping ttrruusstt
       nosave object * ttaarrggeett
       nosave mixed * aaccttiioonn
       string ccuurrrr__ffoorrmm
       mapping kknnoowwnn__ffoorrmmss
       int ccoommbbaatt
       nosave mixed * pprroonnoouunn
       int ddeeaadd
       nosave int iiss__ccoorrppssee
       int hheelldd
       int bbuussyy
       int wwiimmppyy
       int ssooaakk
       int ssttaannccee
       string rraaccee
       string ddeeffaauulltt__ddooiinngg
       nosave string ddooiinngg
       nosave object ddooiinngg__ttaarrggeett
       nosave int ddooiinngg__ddeellaayy
       nosave object * mmyy__ffoolllloowweerrss
       mapping eennvv__vvaarrss

DDEETTAAIILLEEDD DDEESSCCRRIIPPTTIIOONN
       Properties and behaviors possessed by all living objects.

       This object is inherited by all living objects.

       Definition at line 14 of file living.c.

MMEEMMBBEERR FFUUNNCCTTIIOONN DDOOCCUUMMEENNTTAATTIIOONN
   vvooiidd __ccrreeaattee__lliivviinngg (())
       Initialization code for a living object.

       Definition at line 111 of file living.c.

       References ac, alignment, curr_form, hp, known_forms, pronoun,
       Item::set_weight(), skills, stance, and wc.

   vvooiidd aadddd__aalliiggnnmmeenntt ((iinntt xx,, iinntt yy))
       Add the amount y to your alignment of type x. If x is 0, then good/evil
       alignment is modified; if x is 1, then lawful/chaotic is modified.

       Definition at line 1968 of file living.c.

       References alignment.

       Referenced by add_good_alignment(), and add_lawful_alignment().

   vvooiidd aadddd__bbuussyy ((iinntt xx))
       Modify your busy timer by a certain amount. See sseett__bbuussyy(()). Starts the
       heart beat.

       Definition at line 1923 of file living.c.

       References busy.

   vvooiidd aadddd__ddrriinnkk ((iinntt xx))
       Add an amount to the player's drink level.

       Definition at line 2010 of file living.c.

       References drink, and recalc().

       Referenced by take_damage().

   vvooiidd aadddd__eenndduurraannccee ((iinntt xx))
       Adds an amount to your endurance. Bounded by max endurance. Heart beat
       enabled.

       Definition at line 1948 of file living.c.

       References endurance, practice_skill(), and query_maxend().

       Referenced by take_damage().

   vvooiidd aadddd__eennvv__vvaarr ((ssttrriinngg vvaarr,, mmiixxeedd vvaall))
       Adds _v_a_l to the list of values for the environment variable _v_a_r. If the
       variable does not exist yet, it will be created. Only use this function
       if the environment variable contains an ARRAY ... attempting to 'add'
       to plain integer or string variables will erase the old value and
       replace it with a single element list containing _v_a_l.

       Definition at line 2197 of file living.c.

       References env_vars.

       Referenced by Player::locate_command().

   iinntt aadddd__ffoolllloowweerr ((oobbjjeecctt xx))
       Adds a follower to this object. Returns 1 if successful, 0 if it
       fails(ie if you already have that follower).

       Definition at line 2082 of file living.c.

       References check_followers(), and my_followers.

   vvooiidd aadddd__ffoooodd ((iinntt ff))
       Add an amount to the player's food level. If the player is over 75%
       food capacity, some of the mass actually goes to their weight in stead.

       Definition at line 1997 of file living.c.

       References add_weight(), food, query_food_capacity(),
       Item::query_weight(), and recalc().

   vvooiidd aadddd__ffoorrmm ((ssttrriinngg ssttrr))
       Add a new form to the living's list. Checks if it's valid first.

       Definition at line 1220 of file living.c.

       References known_forms.

       Referenced by adopt_best_form().

   iinntt aadddd__ffoorrmm__aaccttiioonn ((ssttrriinngg ffoorrmm,, ssttrriinngg aacctt))
       Enables the action _a_c_t for the form _f_o_r_m.

       RReettuurrnnss::
           True if the action was enabled, and false if you don't have the
           form or it was already enabled.

       Definition at line 1172 of file living.c.

       References known_forms, query_actions(), and query_form_object().

   vvooiidd aadddd__ggoooodd__aalliiggnnmmeenntt ((iinntt nn))
       Same as add_alignment( 0, n )

       Definition at line 1979 of file living.c.

       References add_alignment().

   vvooiidd aadddd__hheelldd ((iinntt xx))
       Modify your held timer by a certain amount. See sseett__hheelldd(()). Starts the
       heart beat.

       Definition at line 1920 of file living.c.

       References held.

   vvooiidd aadddd__hhpp ((iinntt xx))
       Adds an amount to your HP. This amount will be bounded to the maximum
       HP. Heart beat is enabled.

       Definition at line 1926 of file living.c.

       References hp, query_maxhp(), target, and wimpy.

       Referenced by heart_beat(), and take_damage().

   vvooiidd aadddd__llaawwffuull__aalliiggnnmmeenntt ((iinntt nn))
       Same as add_alignment( 1, n )

       Definition at line 1985 of file living.c.

       References add_alignment().

   iinntt aadddd__lleeaaddeerr ((oobbjjeecctt xx))
       Adds a leader to this object. Returns 1 if successful, 0 if it fails(ie
       if you already have that leader).

       Definition at line 2101 of file living.c.

       References check_leaders().

   vvooiidd aadddd__mmaannaa ((iinntt xx))
       Add an amount to your mana. Bounded by your maximum mana. Enables the
       heart beat.

       Definition at line 1937 of file living.c.

       References mana, practice_skill(), and query_maxmana().

   vvooiidd aadddd__rreeaaddiinneessss ((iinntt xx))
       Add an amount to your readiness. See sseett__rreeaaddiinneessss(()). Starts the heart
       beat.

       Definition at line 1917 of file living.c.

       References readiness.

   vvooiidd aadddd__rreeccooggnniizzee ((ssttrriinngg nnaammee))
       Adds a name to the list of people/things you recognize.

       Definition at line 981 of file living.c.

       References Desc::name, and names_known.

   vvooiidd aadddd__sskkiillll ((ssttrriinngg sskkiillll,, iinntt xx))
       Add an amount of xp to a particular skill and make sure that it does
       not exceed the xp cap for the skill at that particular level.

       Definition at line 1639 of file living.c.

       References query_skill(), query_skill_max_exp(), set_skill(), and
       skills.

       Referenced by practice_skill().

   vvooiidd aadddd__ttrruusstt ((ssttrriinngg wwhhoo))
       Add a name to the trust list.

       Definition at line 1133 of file living.c.

       References trust.

   vvooiidd aadddd__wweeiigghhtt ((iinntt xx))
       Add an amount to the living's weight.

       Definition at line 1990 of file living.c.

       References Item::query_weight(), and Item::set_weight().

       Referenced by add_food().

   vvooiidd aaddoopptt__bbeesstt__ffoorrmm (())
       Switch the object's form into one appropriate for their current weapon.

       Definition at line 1242 of file living.c.

       References add_form(), curr_form, known_forms, Desc::query_cap_name(),
       and set_form().

   vvooiidd aassssiimmiillaattee__sskkiillll__xxpp (())
       Move an amount of xp from the current (temporary) slot into the total
       (permanent) slot. Increase skill level if necessary

       NNoottee::
           that this function is called by ddeeccaayy__ffoooodd__aanndd__ddrriinnkk(()) for every
           food decay cycle.

       Definition at line 1383 of file living.c.

       References level, query_skill_cost(), set_skill(), skills, and stance.

       Referenced by decay_food_and_drink().

   iinntt ccaallccuullaattee__lleevveell ((iinntt ttoottaall__sskkiillllss))
       RReettuurrnnss::
           The actual 'level' of this object.

       Definition at line 182 of file living.c.

   iinntt ccaallccuullaattee__sskkiillll__ttoottaall (())
       RReettuurrnnss::
           The total number of skill levels this living has.

       Definition at line 189 of file living.c.

       References skills.

   iinntt cchhaannggee__ssttaannccee ((iinntt xx))
       Change stance and impose a readiness penalty when doing so. This is
       used when the living is voluntarily changing stances, not when being
       knocked around... The costs used here are my second draft, we'll see
       how they do.

       RReettuurrnnss::
           whether or not the stance change was successfull.

       Definition at line 1007 of file living.c.

       References endurance, readiness, set_stance(), and stance.

       Referenced by pop_action().

   vvooiidd cchheecckk__ffoolllloowweerrss (())
       Checks the follower list of this object for valid objectp(). Removes
       any invalid objectp's.

       Definition at line 2058 of file living.c.

       References my_followers, and remove_follower().

       Referenced by add_follower(), and move_player().

   vvooiidd cchheecckk__lleeaaddeerrss (())
       Checks the leader list of this object for valid objectp(). Removes any
       invalid objectp's.

       Definition at line 2070 of file living.c.

       References remove_leader().

       Referenced by add_leader().

   vvooiidd ccpprr (())
       Activates your heartbeat.

       Definition at line 2301 of file living.c.

   vvooiidd ddeeccaayy__ddrriinnkk (())
       NNoottee::
           This function is only included for typo type purposes, use
           ddeeccaayy__ffoooodd__aanndd__ddrriinnkk(()) in stead.

       Definition at line 1553 of file living.c.

       References decay_food_and_drink().

   vvooiidd ddeeccaayy__ffoooodd (())
       NNoottee::
           This function is only included for typo type purposes, use
           ddeeccaayy__ffoooodd__aanndd__ddrriinnkk(()) in stead.

       Definition at line 1548 of file living.c.

       References decay_food_and_drink().

   vvooiidd ddeeccaayy__ffoooodd__aanndd__ddrriinnkk (())
       Decrease this living's food and drink level.

       Definition at line 1425 of file living.c.

       References assimilate_skill_xp(), drink, food, query_autodrink(),
       query_autoeat(), query_drink_percent(), query_food_capacity(),
       query_food_percent(), query_in_combat(), query_level(),
       query_race_object(), recalc(), and stance.

       Referenced by decay_drink(), and decay_food().

   vvooiidd ddeellaayyeedd__wwaallkk ((mmiixxeedd eexxiitt__iidd))
       Checking to see if the follower is present in the room, then if so we
       move them as well by using the 'walk' function.

       Definition at line 2996 of file living.c.

       References push_action().

   oobbjjeecctt ddiiee (())
       Tells this living object to die. This will create a corpse in the
       location where this living object is.

       RReettuurrnnss::
           A pointer to the corpse.

       Definition at line 2314 of file living.c.

       References action, busy, dead, drink, food, held, hp, msg_local(),
       query_drink_capacity(), query_food_capacity(), readiness, and
       stop_combat().

   vvooiidd ddrroopp__iinnvvaalliidd__ttaarrggeettss (())
       Drops all objects that have been destructed from the target list.

       Definition at line 2520 of file living.c.

       References target.

       Referenced by heart_beat(), and pop_action().

   vvooiidd hheeaarrtt__bbeeaatt (())
       A function called every two seconds as long as this object's heart beat
       is turned on. Used to perform recurring tasks like regenerating hit
       points, combat, etc. If the heart beat runs through a round and does
       nothing, it automatically turns itself off.

       Definition at line 2542 of file living.c.

       References action, actions_this_beat, add_hp(), busy, damage_pending,
       dead, doing, doing_delay, drop_invalid_targets(), end_heal_count,
       endurance, heal_count, held, hp, is_corpse, mana, mana_heal_count,
       pop_action(), query_end_heal_delay(), query_endurance(),
       query_form_object(), query_heal_delay(), query_in_combat(),
       query_mana_heal_delay(), query_max_endurance(), query_maxend(),
       query_maxhp(), query_maxmana(), readiness, and readiness_required().

   oobbjjeecctt iidd ((ssttrriinngg ssttrr))
       If this object is dead, returns true if _s_t_r identifies this corpse.
       Otherwise uses the standard iidd(()) in desc

       Reimplemented from DDeesscc.

       Definition at line 936 of file living.c.

       References query_distant(), query_plural(), and query_specific().

   ssttrriinngg lliivviinngg__iinnffoo (())
       Used by the object editor to let you edit living objects.

       Definition at line 143 of file living.c.

   vvaarraarrggss iinntt mmoovvee__ppllaayyeerr ((mmiixxeedd ddeesstt,, ssttrriinngg mmoovveevveerrbb,, ssttrriinngg ddiirreeccttiioonn))
       Move this player to _d_e_s_t using movement type _m_o_v_e_t_y_p_e. The variable
       _d_e_s_t may be an object or string; if a string, it must respond to
       find_room. Returns true on success. Also now contains code to implement
       'follow'.

       Definition at line 2917 of file living.c.

       References check_followers(), and my_followers.

       Referenced by Player::enter_world().

   vvaarraarrggss vvooiidd mmssgg__llooccaall ((ssttrriinngg wwoorrddss,, iinntt iinnddeenntt))
       Send a message to all users in this room, including this object, with
       this object as the speaker. Verbs are conjugated according to codes,
       etc.

       Definition at line 2866 of file living.c.

       Referenced by die(), on_threaten(), and set_form().

   vvaarraarrggss vvooiidd mmssgg__oobbsseerrvveerrss ((ssttrriinngg wwoorrddss,, iinntt iinnddeenntt))
       Send a message to all users in this room, except this object and the
       target.

       Definition at line 2890 of file living.c.

       References query_target().

   vvooiidd oonn__iinnsseerrtt ((oobbjjeecctt oobb))
       Recalculates bonuses, checks the weight limit.

       Definition at line 2669 of file living.c.

       References recalc().

   vvooiidd oonn__rreemmoovvee ((oobbjjeecctt oobb))
       Recalculates bonuses, etc.

       Definition at line 2685 of file living.c.

       References recalc().

   iinntt oonn__tthhrreeaatteenn ((oobbjjeecctt vviiccttiimm,, iinntt xx,, iinntt yy))
       Perform action found in environment variable TthreatAction on  occupant
       _v_i_c_t_i_m of threatened square _x, _y.

       RReettuurrnnss::
           1 if movement is stopped.

       Definition at line 908 of file living.c.

       References msg_local(), and readiness.

   iinntt ppoopp__aaccttiioonn (())
       Pops and performs the action at the top of the queue, but only if this
       living is ready to perform it.

       RReettuurrnnss::

       0: Either there is no action that needs doing, or the action could not
       be performed because this living is not yet ready (stance change,
       readiness req, etc.).

       1: An action was popped and performed.

       2: An action was popped, but was no longer valid. This can usually be
       treated the same as case 1, but there may be a reason that you need to
       know the difference.


       Definition at line 1756 of file living.c.

       References action, actions_this_beat, change_stance(),
       drop_invalid_targets(), query_hp(), readiness, stance, and target.

       Referenced by heart_beat(), and push_action().

   vvaarraarrggss vvooiidd pprraaccttiiccee__sskkiillll ((ssttrriinngg sskkiillll,, iinntt aammtt))
       Call this function whenever you want to practice a skill. Generally
       called when the skill is used.

       PPaarraammeetteerrss::

       _s_k_i_l_l  Name of the skill to be practiced

       _a_m_t    (Optional) Amount of points to practice by. Default is 1.

       Definition at line 2701 of file living.c.

       References add_skill(), query_skill_level(), and skills.

       Referenced by add_endurance(), add_mana(), and skill_check().

   iinntt ppuusshh__aaccttiioonn ((mmiixxeedd ** aacctt))
       Adds an action onto the end of the action queue. Equivalent to
       set_action( sizeof(qquueerryy__aaccttiioonnss(())), act ), but much simpler!

       PPaarraammeetteerrss::

       _a_c_t    A correctly formatted action. See the man page on 'action'.

       Definition at line 1859 of file living.c.

       References action, and pop_action().

       Referenced by delayed_walk().

   vvaarraarrggss mmiixxeedd qquueerryy__aacc ((ssttrriinngg xx))
       RReettuurrnnss::
           This object's armour class. \warn Does not return the variable ac.
           To get the value of ac, use qquueerryy__rreeaall__aacc(()).

       Definition at line 342 of file living.c.

       References query_armour_ac(), query_real_ac(), and Item::value.

   vvaarraarrggss mmiixxeedd qquueerryy__aacc__mmoodd ((ssttrriinngg xx))
       RReettuurrnnss::
           This object's ac modifier.

       Definition at line 366 of file living.c.

   mmiixxeedd** qquueerryy__aaccttiioonn ((iinntt xx))
       RReettuurrnnss::
           The action at position _x in the queue. Position 0 is the front of
           the queue. If the position specified is invalid, returns 0.

       Definition at line 721 of file living.c.

       References action.

       Referenced by query_action_name(), and take_damage().

   iinntt qquueerryy__aaccttiioonn__eennaabblleedd ((ssttrriinngg aacctt))
       RReettuurrnnss::
           True, if _a_c_t is an enabled action/reaction within the current form.

       Definition at line 764 of file living.c.

       References curr_form.

   ssttrriinngg qquueerryy__aaccttiioonn__nnaammee ((iinntt xx))
       Returns the name of action x in the queue.

       Definition at line 729 of file living.c.

       References query_action().

       Referenced by take_damage().

   mmiixxeedd** qquueerryy__aaccttiioonnss (())
       Returns the array of currently pending battle actions.

       Definition at line 744 of file living.c.

       References action.

       Referenced by add_form_action().

   iinntt qquueerryy__aalliiggnnmmeenntt ((iinntt xx))
       RReettuurrnnss::
           An aspect of this object's alignment.

       PPaarraammeetteerrss::

       _x      Determines which aspect of the alignment you wish to know.
              Possible values are:

       0 (or no value specified) -- Good/evil alignment

       1 -- Chaotic/lawful alignment

       2 -- Any custom alignment information (if 0 is returned then no custom
       alignment is set).


       Definition at line 474 of file living.c.

       References alignment.

   vvaarraarrggss ssttrriinngg qquueerryy__aalliiggnnmmeenntt__ssttrriinngg ((mmiixxeedd ** aalliiggnn))
       Returns a string giving the alignment of this living object. If _a_l_i_g_n
       is passed in (optional) the resulting string is based on the alignment
       information it contains.

       Definition at line 579 of file living.c.

       References alignment.

   vvaarraarrggss mmiixxeedd qquueerryy__aarrmmoouurr__aacc ((ssttrriinngg ssttrr))
       This function returns information about the armour a living object
       happens  to be wearing at the moment. If a parameter is given, the
       returned value is  the total ac offered by armour of a given type.

       If no parameter is given, the function returns an array containing the
       total base ac of all armour in the first element and an ac_mod style
       mapping in the second element.

       Definition at line 314 of file living.c.

       Referenced by query_ac().

   ssttrriinngg qquueerryy__aauuttooddrriinnkk (())
       RReettuurrnnss::
           This object's current autodrink setting.

       Definition at line 265 of file living.c.

       Referenced by decay_food_and_drink().

   ssttrriinngg qquueerryy__aauuttooeeaatt (())
       RReettuurrnnss::
           This object's current autoeat setting.

       Definition at line 262 of file living.c.

       Referenced by decay_food_and_drink().

   iinntt qquueerryy__aauuttoottaakkee (())
       RReettuurrnnss::
           True if this living will automatically take items given to it.

       Definition at line 259 of file living.c.

   iinntt qquueerryy__aavveerraaggee__aacc (())
       RReettuurrnnss::
           This object's general ac (most armour included).

       Definition at line 383 of file living.c.

       References ac, and query_real_ac().

   ssttrriinngg qquueerryy__bbpp__nnaammee ((iinntt bbpp))
       RReettuurrnnss::
           The name of the body part given by the flag _b_p. If an invalid flag
           is passed in (you may not OR them together) then 0 is returned; 0
           is also returned if the creature does not possess the given body
           part.

       Definition at line 460 of file living.c.

       References race.

   iinntt qquueerryy__bbuussyy (())
       RReettuurrnnss::
           Number of hb remaining of business, -1 is perpetual.

       Definition at line 414 of file living.c.

       References busy.

   iinntt qquueerryy__ccoommbbaatt__mmooddee (())
       RReettuurrnnss::
           True if this living is currently in combat mode.

       Definition at line 626 of file living.c.

       References combat.

   iinntt qquueerryy__ddeeaadd (())
       RReettuurrnnss::
           True if this living object is dead, false if it is not. The value
           of dead will be how far it has decayed.

       Definition at line 408 of file living.c.

       References dead.

   ssttrriinngg qquueerryy__ddeeffaauulltt__ddooiinngg (())
       RReettuurrnnss::
           The default_doing string (the string returned by query_doing when
           you're not busy doing anything).

       Definition at line 840 of file living.c.

       References default_doing.

   ssttrriinngg qquueerryy__ddiissttaanntt (())
       RReettuurrnnss::
           The living's distant, if alive, otherwise the distant plus ''s
           corpse'

       Reimplemented from DDeesscc.

       Reimplemented in PPllaayyeerr.

       Definition at line 780 of file living.c.

       Referenced by id().

   ssttrriinngg qquueerryy__ddooiinngg (())
       RReettuurrnnss::
           A processed version of the doing string. All grammar codes are
           evaluated using the target passed into sseett__ddooiinngg(()); ANSI codes will
           not be evaluated. This function does call set_target, but it
           restores the old target when it is done, so you shouldn't have
           problems with side-effects. Make sure you have called set_listener
           before you call this function, otherwise point-of-view can't be
           evaluated properly.

       Definition at line 851 of file living.c.

       References default_doing, doing, doing_target, and query_target().

       Referenced by query_threaten().

   iinntt qquueerryy__ddrriinnkk (())
       RReettuurrnnss::
           This object's current drink level.

       Definition at line 256 of file living.c.

       References drink.

       Referenced by query_drink_percent().

   iinntt qquueerryy__ddrriinnkk__ccaappaacciittyy (())
       RReettuurrnnss::
           This object's maximum drink capacity.

       Definition at line 276 of file living.c.

       References Item::query_weight().

       Referenced by die(), and query_drink_percent().

   iinntt qquueerryy__ddrriinnkk__ppeerrcceenntt (())
       RReettuurrnnss::
           This object's drink percentage

       Definition at line 294 of file living.c.

       References query_drink(), and query_drink_capacity().

       Referenced by decay_food_and_drink().

   iinntt qquueerryy__ddrrooppppaabbllee (())
       RReettuurrnnss::
           True. Living objects may always be dropped. See qquueerryy__ggeettttaabbllee(()).

       Reimplemented from IItteemm.

       Definition at line 822 of file living.c.

   iinntt qquueerryy__eenndd__hheeaall__ddeellaayy (())
       RReettuurrnnss::
           The amount of hb for a single point of endurance to heal.

       Definition at line 437 of file living.c.

       References query_skill().

       Referenced by heart_beat().

   iinntt qquueerryy__eenndduurraannccee (())
       RReettuurrnnss::
           How much endurance this object has.

       Definition at line 250 of file living.c.

       References endurance.

       Referenced by heart_beat(), and take_damage().

   mmiixxeedd qquueerryy__eennvv__vvaarr ((ssttrriinngg nnaammee))
       Queries the value of a single environment variable. If name contains an
       expression of the form 'var[x]' where x is an integer, then only the
       x'th element of var will be returned, otherwise the entire array will
       be returned. Indexing is 0 based.

       RReettuurrnnss::
           0 if nnaammee ddooeess nnoott eexxiisstt,, ootthheerrwwiissee tthhee vvaalluuee..

       Definition at line 2160 of file living.c.

       References env_vars, and Desc::name.

       Referenced by Player::locate_command(), and Player::query_ansi().

   mmiixxeedd qquueerryy__eennvv__vvaarrss (())
       RReettuurrnnss::
           The entire environment variable mapping. If the environment
           variable mapping is null this function will return 0. To avoid
           certain security hazards, this function returns a copy, not the
           original mapping.

       TTooddoo::
            Scrap the 'hair' patch here once inactive player deletion is in
           place.

       Definition at line 2183 of file living.c.

       References env_vars.

   oobbjjeecctt** qquueerryy__ffoolllloowweerrss (())
       Returns list of this objects followers.

       Definition at line 944 of file living.c.

       References my_followers.

   iinntt qquueerryy__ffoooodd (())
       RReettuurrnnss::
           This object's current food level.

       Definition at line 253 of file living.c.

       References food.

       Referenced by query_food_percent().

   iinntt qquueerryy__ffoooodd__ccaappaacciittyy (())
       RReettuurrnnss::
           This object's maximum food capacity.

       Definition at line 268 of file living.c.

       References Item::query_weight().

       Referenced by add_food(), decay_food_and_drink(), die(), and
       query_food_percent().

   iinntt qquueerryy__ffoooodd__ppeerrcceenntt (())
       RReettuurrnnss::
           This object's food percentage

       Definition at line 291 of file living.c.

       References query_food(), and query_food_capacity().

       Referenced by decay_food_and_drink().

   ssttrriinngg qquueerryy__ffoorrmm (())
       RReettuurrnnss::
           The form currently being used by this player.

       Definition at line 708 of file living.c.

       References curr_form.

   vvaarraarrggss oobbjjeecctt qquueerryy__ffoorrmm__oobbjjeecctt ((ssttrriinngg ffoorrmm))
       RReettuurrnnss::
           The object pointer for the form you are currently using.

       Definition at line 713 of file living.c.

       References curr_form.

       Referenced by add_form_action(), heart_beat(), and set_form().

   iinntt qquueerryy__ggeennddeerr (())
       RReettuurrnnss::
           One of three possible genders -- 0 = neuter, 1 = male, 2 = female.

       Definition at line 204 of file living.c.

       References gender.

   iinntt qquueerryy__ggeettttaabbllee (())
       Only true if this object is dead (corpses may be picked up).

       Reimplemented from IItteemm.

       Definition at line 816 of file living.c.

   iinntt qquueerryy__hhaass__bbpp ((iinntt bbpp))
       RReettuurrnnss::
           A non-zero integer will be returned if any of the body-parts given
           by _b_p match the body parts possessed by this living object; the
           integer returned is all the body parts this living actually has,
           or'd together.

       Definition at line 447 of file living.c.

       References query_race_object().

   iinntt qquueerryy__hheeaall__ddeellaayy (())
       RReettuurrnnss::
           The amount of time, in heart beats, for a single hit point to heal.

       Definition at line 423 of file living.c.

       References query_skill().

       Referenced by heart_beat().

   iinntt qquueerryy__hheelldd (())
       RReettuurrnnss::
           Number of hb remaining on hold effect, -1 is perpetual.

       Reimplemented from IItteemm.

       Definition at line 411 of file living.c.

       References held.

   iinntt qquueerryy__hhpp (())
       RReettuurrnnss::
           How many hit points this object has.

       Definition at line 234 of file living.c.

       References hp.

       Referenced by pop_action(), and take_damage_percent().

   iinntt qquueerryy__iinn__ccoommbbaatt (())
       RReettuurrnnss::
           True if this living object has outstanding targets in the same
           room, false otherwise.

       Definition at line 639 of file living.c.

       References target.

       Referenced by decay_food_and_drink(), and heart_beat().

   iinntt qquueerryy__iiss__lliivviinngg (())
       Returns true. Denotes that this object is living. Naturally other
       objects can forge this if they desire.

       Definition at line 172 of file living.c.

       References dead.

   ssttrriinngg qquueerryy__jjoobb__ttiittllee (())
       RReettuurrnnss::
           The job title of this object.

       Definition at line 198 of file living.c.

       References job_title.

   mmaappppiinngg qquueerryy__kknnoowwnn__ffoorrmmss (())
       RReettuurrnnss::
           A mapping of all the forms this living knows

       Definition at line 690 of file living.c.

       References known_forms.

   mmaappppiinngg qquueerryy__kknnoowwnn__ssppeellllss (())
       RReettuurrnnss::
           A mapping of all spells this living knows

       Definition at line 685 of file living.c.

   oobbjjeecctt** qquueerryy__lleeaaddeerrss (())
       Returns list of this objects leaders.

       Definition at line 946 of file living.c.

   iinntt qquueerryy__lleevveell (())
       RReettuurrnnss::
           The level/rank of this object.

       Definition at line 175 of file living.c.

       References level.

       Referenced by decay_food_and_drink(), Player::query_command_history(),
       Player::query_last_command(), and Player::set_invis().

   iinntt qquueerryy__lliivviinngg (())
       TTooddoo: Nuke this once it's no longer used.

       Definition at line 167 of file living.c.

       References dead.

   ssttrriinngg qquueerryy__llooookk (())
       The string you get when you look at this living; varies if it is dead.

       Reimplemented from DDeesscc.

       Definition at line 802 of file living.c.

       References dead, and query_specific().

   iinntt qquueerryy__mmaannaa (())
       RReettuurrnnss::
           How much mana this object has.

       Definition at line 247 of file living.c.

       References mana.

   iinntt qquueerryy__mmaannaa__hheeaall__ddeellaayy (())
       RReettuurrnnss::
           The amount of hb for a single point of mana to regenerate.

       Definition at line 430 of file living.c.

       References query_skill().

       Referenced by heart_beat().

   iinntt qquueerryy__mmaaxx__eenndduurraannccee (())
       This living's maximum endurance.

       Definition at line 666 of file living.c.

       References query_race_object(), and query_skill().

       Referenced by heart_beat(), and query_maxend().

   iinntt qquueerryy__mmaaxx__hhpp (())
       This living's maximum hit points (which is derived from its
       constitution).

       Definition at line 644 of file living.c.

       References query_race_object(), and query_skill().

       Referenced by query_maxhp().

   iinntt qquueerryy__mmaaxx__mmaannaa (())
       This living's maximum mana.

       Definition at line 655 of file living.c.

       References query_race_object(), and query_skill().

       Referenced by query_maxmana().

   iinntt qquueerryy__mmaaxxeenndd (())
       Alias for qquueerryy__mmaaxx__eenndduurraannccee(()).

       Definition at line 675 of file living.c.

       References query_max_endurance().

       Referenced by add_endurance(), and heart_beat().

   iinntt qquueerryy__mmaaxxhhpp (())
       Alias for qquueerryy__mmaaxx__hhpp(()).

       Definition at line 652 of file living.c.

       References query_max_hp().

       Referenced by add_hp(), and heart_beat().

   iinntt qquueerryy__mmaaxxmmaannaa (())
       Alias for qquueerryy__mmaaxx__mmaannaa(()).

       Definition at line 663 of file living.c.

       References query_max_mana().

       Referenced by add_mana(), and heart_beat().

   iinntt qquueerryy__mmoonneeyy (())
       RReettuurrnnss::
           The amount of money this creature possesses. Somewhat expensive,
           don't use wantonly.

       Definition at line 629 of file living.c.

   mmaappppiinngg qquueerryy__nnaammeess__kknnoowwnn (())
       RReettuurrnnss::
           A mapping of people that this player recognizes.

       Definition at line 243 of file living.c.

       References names_known.

   oobbjjeecctt qquueerryy__ppaarrttyy__oobbjjeecctt (())
       RReettuurrnnss::
           This object's party object, if any.

       Definition at line 207 of file living.c.

   ssttrriinngg qquueerryy__pplluurraall (())
       RReettuurrnnss::
           The living's plural, if alive, otherwise 'corpses'

       Reimplemented from DDeesscc.

       Definition at line 786 of file living.c.

       Referenced by id().

   ssttrriinngg qquueerryy__rraaccee (())
       RReettuurrnnss::
           The full path to the race object for this living object.

       Definition at line 835 of file living.c.

       References race.

   oobbjjeecctt qquueerryy__rraaccee__oobbjjeecctt (())
       RReettuurrnnss::
           A race object, even if no valid race is set...

       Definition at line 827 of file living.c.

       References race.

       Referenced by decay_food_and_drink(), query_has_bp(),
       query_max_endurance(), query_max_hp(), and query_max_mana().

   iinntt qquueerryy__rreeaaddiinneessss (())
       RReettuurrnnss::
           This object's current degree of readiness (in combat)

       Definition at line 210 of file living.c.

       References readiness.

   iinntt qquueerryy__rreeaall__aacc (())
       RReettuurrnnss::
           This object's base ac (without armour).

       Definition at line 376 of file living.c.

       References ac.

       Referenced by query_ac(), and query_average_ac().

   iinntt qquueerryy__rreeccooggnniizzee ((ssttrriinngg nnaammee))
       RReettuurrnnss::
           True, if this player has been introduced to <name> before; false
           otherwise.

       Definition at line 237 of file living.c.

       References Desc::name, and names_known.

   iinntt qquueerryy__sskkiillll ((ssttrriinngg sskkiillll))
       RReettuurrnnss::
           An integer indicating an object's actual bonus for a particular
           skill.

       Definition at line 495 of file living.c.

       References level, and query_skill_level().

       Referenced by add_skill(), query_end_heal_delay(), query_heal_delay(),
       query_mana_heal_delay(), query_max_endurance(), query_max_hp(), and
       query_max_mana().

   iinntt qquueerryy__sskkiillll__ccaapp ((ssttrriinngg sskkiillll,, iinntt lleevveell))
       RReettuurrnnss::
           the maximum temporary xp a particular skill may have

       Definition at line 535 of file living.c.

       References level, and query_skill_cost().

       Referenced by query_skill_max_exp(), and set_skill().

   iinntt qquueerryy__sskkiillll__ccoosstt ((ssttrriinngg sskkiillll,, iinntt lleevveell))
       RReettuurrnnss::
           The cost to advance a skill to lleevveell

       Definition at line 517 of file living.c.

       References level.

       Referenced by assimilate_skill_xp(), query_skill_cap(),
       repair_skills_mapping(), and set_skill().

   iinntt qquueerryy__sskkiillll__ccuurrrreenntt__eexxpp ((ssttrriinngg xx))
       RReettuurrnnss::
           The current amount of xp in a given skill (waiting to be
           assimilated.

       PPaarraammeetteerrss::

       _x      The name of the skill in question

       Definition at line 554 of file living.c.

       References skills.

   iinntt qquueerryy__sskkiillll__lleevveell ((ssttrriinngg xx))
       RReettuurrnnss::
           An integer indicating a player's level of ability in a given skill.
           If no value is set for the skill, it will return 0.

       PPaarraammeetteerrss::

       _x      The name of the skill whose level you wish to know.

       Definition at line 487 of file living.c.

       References skills.

       Referenced by practice_skill(), and query_skill().

   iinntt qquueerryy__sskkiillll__mmaaxx__eexxpp ((ssttrriinngg xx))
       RReettuurrnnss::
           The maximum value that may be stored in skills[x,2]

       NNoottee::
           this is really just a lazy alias for query_skill_cap...

       PPaarraammeetteerrss::

       _x      The name of the skill in question

       Definition at line 563 of file living.c.

       References query_skill_cap(), and skills.

       Referenced by add_skill().

   iinntt qquueerryy__sskkiillll__ttoottaall__eexxpp ((ssttrriinngg xx))
       RReettuurrnnss::
           The total xp earned in a given skill.

       PPaarraammeetteerrss::

       _x      The name of the skill in question

       Definition at line 545 of file living.c.

       References skills.

   mmaappppiinngg qquueerryy__sskkiillllss (())
       RReettuurrnnss::
           The entire mapping of a player's skills.

       Definition at line 570 of file living.c.

       References skills.

   iinntt qquueerryy__ssooaakk (())
       RReettuurrnnss::
           True if this living is attempting to soak damage into endurance.

       Definition at line 420 of file living.c.

       References soak.

   ssttrriinngg qquueerryy__ssppeecciiffiicc (())
       RReettuurrnnss::
           The living's specific description, if alive, otherwise a brief
           description of its corpse.

       Reimplemented from DDeesscc.

       Reimplemented in PPllaayyeerr.

       Definition at line 794 of file living.c.

       Referenced by id(), and query_look().

   iinntt qquueerryy__ssttaannccee (())
       RReettuurrnnss::
           The current 'combat' stance of the object.

       Definition at line 201 of file living.c.

       References stance.

   iinntt qquueerryy__ssttrr__wwcc (())
       RReettuurrnnss::
           This object's bonus to wc from current strength.

       Definition at line 221 of file living.c.

   mmiixxeedd qquueerryy__ttaarrggeett (())
       RReettuurrnnss::
           A pointer to this living's current combatant; 0 if it has none.

       Definition at line 609 of file living.c.

       References target.

       Referenced by msg_observers(), and query_doing().

   mmiixxeedd qquueerryy__ttaarrggeettss (())
       RReettuurrnnss::
           An array of current targets for combat (all that I am mad at).

       Definition at line 615 of file living.c.

       References target.

   ssttrriinngg qquueerryy__tthhrreeaatt__aaccttiioonn (())
       Return the particular.

       Definition at line 871 of file living.c.

   mmaappppiinngg qquueerryy__tthhrreeaatteenn ((mmaappppiinngg ppaatthh))
       Determine whether or not this living threatens (x,y) Notes: IMO this
       function would do better to return a mapping of all the points
       threatened by this object. That makes it quite a bit quicker, and
       allows you to optimize the walk command if you want to. As it stands,
       this function doesn't allow for unusually shaped paths in any case
       (only can threaten adjacent squares atm). Also, returning a mapping of
       threatened points simplifies the call a bit (no params).

       Definition at line 884 of file living.c.

       References query_doing().

   vvaarraarrggss mmiixxeedd qquueerryy__ttrruusstt ((ssttrriinngg xx))
       RReettuurrnnss::
           If name is specified, whether they are trusted otherwise, returns
           the entire trusted list.

       Definition at line 678 of file living.c.

       References trust.

   vvaarraarrggss mmiixxeedd qquueerryy__wwcc ((ssttrriinngg xx))
       RReettuurrnnss::
           This object's weapon class.

       Definition at line 297 of file living.c.

       References wc.

   iinntt qquueerryy__wweeiigghhtt__ccaappaacciittyy (())
       RReettuurrnnss::
           The maximum weight, in grams, that this living object can carry.

       Definition at line 284 of file living.c.

       References Item::query_weight().

   iinntt qquueerryy__wwiimmppyy (())
       RReettuurrnnss::
           Percentage of hp to wimpy at.

       Definition at line 417 of file living.c.

       References wimpy.

   iinntt rreeaaddiinneessss__rreeqquuiirreedd (())
       RReettuurrnnss::
           The readiness requirement for the next action in the queue

       Definition at line 213 of file living.c.

       References action.

       Referenced by heart_beat().

   vvooiidd rreeccaallcc (())
       Recalculate various bonuses/penalties stored on the living.

       Definition at line 2366 of file living.c.

       References drink, and food.

       Referenced by add_drink(), add_food(), decay_food_and_drink(),
       on_insert(), on_remove(), set_drink(), and set_food().

   iinntt rreemmoovvee__eennvv__vvaarr ((ssttrriinngg vvaarr))
       Removes an environment variable from this player's mapping of them.

       PPaarraammeetteerrss::

       _v_a_r    The variable to delete.

       RReettuurrnnss::
           True if the variable is deleted; false if it did not exist.

       Definition at line 2209 of file living.c.

       References env_vars.

   iinntt rreemmoovvee__eennvv__vvaarr__iitteemm ((ssttrriinngg vvaarr,, mmiixxeedd vvaall))
       Removes _v_a_l from the environment variable given by _v_a_r. If _v_a_l is an
       integer, then the variable at that position is deleted (0 based
       indexing); otherwise, _v_a_r is searched for a value matching _v_a_l and that
       value is deleted. Deleting by integer index is much more efficient.

       RReettuurrnnss::
           True on success; false if the parameters are invalid. False is also
           returned if the variable contains a string or integer (this
           function only works on array style variables). Invalid index is not
           detected, instead it will quietly do nothing.

       Definition at line 2227 of file living.c.

       References env_vars.

   iinntt rreemmoovvee__ffoolllloowweerr ((oobbjjeecctt xx))
       Removes a follower of this object.

       Definition at line 2121 of file living.c.

       References my_followers.

       Referenced by check_followers().

   vvooiidd rreemmoovvee__ffoorrmm ((ssttrriinngg ssttrr))
       Remove a form from the living's list of known forms.

       Definition at line 1237 of file living.c.

       References known_forms.

   iinntt rreemmoovvee__lleeaaddeerr ((oobbjjeecctt xx))
       Removes a leader of this object.

       Definition at line 2134 of file living.c.

       Referenced by check_leaders().

   vvooiidd rreemmoovvee__rreeccooggnniizzee ((ssttrriinngg nnaammee))
       Removes a name from the list of people/things you recognize.

       Definition at line 987 of file living.c.

       References Desc::name, and names_known.

   vvooiidd rreemmoovvee__sskkiillll ((ssttrriinngg sskkiillll))
       Removes a skill entirely from the mapping.

       PPaarraammeetteerrss::

       _s_k_i_l_l  The skill to remove.

       Definition at line 1959 of file living.c.

       References skills.

   vvooiidd rreemmoovvee__ttrruusstt ((ssttrriinngg wwhhoo))
       Removes a name from the ignore list.

       Definition at line 1139 of file living.c.

       References trust.

   vvooiidd rreeppaaiirr__sskkiillllss__mmaappppiinngg (())
       This function exists primarily for the transition period between the
       old (random) skills sytem and the new (xp-based) one. It fixes
       discrepancies in the mapping that stores everything.

       Definition at line 1567 of file living.c.

       References level, query_skill_cost(), and skills.

   vvooiidd rreerroollll (())
       (Hack) rerolls the player's stats. This should be moved from the bin
       verb to here, IMO. (Acius: Sigh, in WHOSE opinion? I don't actually
       care, btw ... actually, I disagree. Verbs are easy to update, living is
       dangerous and stupid to update. Never put anything in living unless you
       have to)

       Definition at line 953 of file living.c.

       References Desc::name.

   oobbjjeecctt rreevviivvee (())
       Brings this object back to life, if dead, and starts the heart beat for
       healing.

       Definition at line 2809 of file living.c.

       References dead, drink, food, hp, and is_corpse.

   ssaayy__aallll ((ssttrriinngg wwoorrddss,, iinntt iinnddeenntt))
       Sends a message to all users, with this object as the speaker. This
       object does not hear the message.

       Definition at line 2824 of file living.c.

       Referenced by Player::enter_world(), and Player::quit().

   vvaarraarrggss vvooiidd ssaayy__llooccaall ((ssttrriinngg wwoorrddss,, iinntt iinnddeenntt))
       Sends a message to all users in this room, with this object speaking.
       This object does not hear the message.

       Definition at line 2840 of file living.c.

   vvaarraarrggss vvooiidd sseett__aacc ((mmiixxeedd wwhhaatt,, iinntt aammtt))
       Set this living object's armour class. This is recalculated whenever
       armour is put on or taken off.

       There are a couple of ways to use this function:

       set_ac( ([ 'blunt':3, 'piercing':-2 ]) ); -- this will set the armour
       class modifiers directly, and replace any existing modifiers that may
       have been in place.

       set_ac( 'blunt', 2 ); -- sets the 'blunt' modifier to '+2'. This will
       change a single modifier, without erasing the existing modifiers.

       set_ac( 3 ); -- Sets the base armour class. Does not affect modifiers.
       This is the armour class that the modifiers, well, modify.


       Definition at line 1673 of file living.c.

       References ac.

   vvooiidd sseett__aaccttiioonn ((iinntt xx,, mmiixxeedd ** aacctt))
       Replaces one of the commands on the action queue with _a_c_t. If _x is
       within the bounds of the action queue, it will replace that element in
       the queue. If _x < 0, it will add the action to the front of the queue.
       If _x >= the size of the queue, the action goes on the end.

       PPaarraammeetteerrss::

       _a_c_t    A correctly formatted action. See the man page on 'action' This
              function is particularly useful for adding an action onto the
              front of the combat queue -- use set_action( -1, whatever );

       Definition at line 1734 of file living.c.

       References action.

   vvooiidd sseett__aaccttiioonnss ((mmiixxeedd ** xx))
       Sets the actions array directly. Giving garbage values will cause big,
       confusing errors, so I don't recommend that.

       Definition at line 1704 of file living.c.

       References action.

       Referenced by set_form().

   vvooiidd sseett__aalliiggnnmmeenntt ((iinntt xx,, iinntt yy))
       Set the alignment values directly.

       Definition at line 1883 of file living.c.

       References alignment.

   vvooiidd sseett__aalliiggnnmmeenntt__ssttrriinngg ((ssttrriinngg xx))
       Allows you to set your alignment as a string. If you pass in a standard
       alignment name (chaotic good, true neutral, lawful evil, etc.) then it
       translates this to a numeric alignment; otherwise, your alignment is
       set to a custom value and ignores numeric fluctuations. Pass in the
       string 'clear', or '0', or the number 0 to clear a custom alignment.

       Definition at line 1895 of file living.c.

       References alignment.

   vvooiidd sseett__aauuttooddrriinnkk ((ssttrriinngg xx))
       Set this living's autodrink value.

       Definition at line 1362 of file living.c.

   vvooiidd sseett__aauuttooeeaatt ((ssttrriinngg xx))
       Set this living's autoeat value.

       Definition at line 1359 of file living.c.

   vvooiidd sseett__aauuttoottaakkee ((iinntt xx))
       Set this living's autotake value.

       Definition at line 1365 of file living.c.

   vvooiidd sseett__bbuussyy ((iinntt xx))
       Set this living's 'busy' timer (occupied w/ spell, etc., no actions).
       Turns on heart beat.

       Definition at line 1121 of file living.c.

       References busy.

   vvooiidd sseett__ddeeffaauulltt__ddooiinngg ((ssttrriinngg ss))
       Sets the default_doing string, which is 'what you do when you're not
       doing anything.'.

       Definition at line 1312 of file living.c.

       References default_doing.

   vvaarraarrggss vvooiidd sseett__ddooiinngg ((ssttrriinngg xx,, oobbjjeecctt ttaarrgg))
       Sets the 'doing' string, which determines what the player is currently
       doing. The doing string should be a gerund, which means a phrase using
       an -ing verb. Good examples are 'smelling the roses', 'pacing back and
       forth', 'sitting on the ground', or 'being eaten alive by wolves'.

       PPaarraammeetteerrss::

       _x      The doing string to set

       _t_a_r_g   (Optional) A target object used in the doing string. It will be
              evaluated every time query_doing is called.

       Definition at line 1324 of file living.c.

       References doing, doing_delay, and doing_target.

   vvooiidd sseett__ddrriinnkk ((iinntt xx))
       Set this living's drink level.

       Definition at line 1353 of file living.c.

       References drink, and recalc().

   vvooiidd sseett__eenndd ((iinntt xx))
       A 'shortcut' function for set_endurance.

       Definition at line 1344 of file living.c.

       References set_endurance().

   vvooiidd sseett__eenndd__hheeaall__ddeellaayy ((iinntt xx))
       Set the number of heart beats for endurance to increase a point.

       Definition at line 1306 of file living.c.

   vvooiidd sseett__eenndduurraannccee ((iinntt xx))
       Set this living's endurance. No range checking. Heart beat enabled.

       Definition at line 1341 of file living.c.

       References endurance.

       Referenced by set_end().

   iinntt sseett__eennvv__vvaarr ((ssttrriinngg vvaarr,, mmiixxeedd vvaall))
       Sets an entire environment variable or one of the values within an
       environment variable. To set a single value within a variable, use the
       format 'varname[x]' for the _v_a_r parameter; this will set item _x in
       _v_a_r_n_a_m_e to _v_a_l. Otherwise, the entire variable _v_a_r will be set to _v_a_l.
       _v_a_l may be of any datatype, however it is recommended that you only use
       strings, ints, and arrays of strings or ints for variables.

       RReettuurrnnss::
           True on success, false if there was a problem.

       Definition at line 2263 of file living.c.

       References env_vars.

       Referenced by Player::set_ansi().

   vvooiidd sseett__eennvv__vvaarrss ((mmaappppiinngg mm))
       Set the entire environment variable's mapping directly. This is really
       simple; useful for direct variable editing.

       Any mapping or the value 0 will be accepted here. Anything else is
       quietly ignored.

       Definition at line 2245 of file living.c.

       References env_vars.

   vvooiidd sseett__ffoolllloowweerrss ((oobbjjeecctt ** xx))
       Sets the followers of this object.

       Definition at line 2052 of file living.c.

       References my_followers.

   vvooiidd sseett__ffoooodd ((iinntt xx))
       Set this living's food level.

       Definition at line 1347 of file living.c.

       References food, and recalc().

   vvaarraarrggss vvooiidd sseett__ffoorrmm ((ssttrriinngg xx,, iinntt ssiilleenntt))
       Changes the form currently used by this creature. This should be a
       string giving an object name in the forms directory (FORMS_DIR, a
       constant found in const/battconst.h). The forms directory is implied,
       so if you have a file '/battle/forms/brawl.c' then you can
       set_form('brawl').

       The legality of the data passed in is not checked, so be careful to
       only pass in legal values.

       Definition at line 1199 of file living.c.

       References curr_form, msg_local(), query_form_object(), and
       set_actions().

       Referenced by adopt_best_form().

   vvooiidd sseett__ggeennddeerr ((iinntt xx))
       Set this living's gender to _x. 0 = neuter, 1 = male, 2 = female.

       Definition at line 2046 of file living.c.

       References gender.

   vvooiidd sseett__hheeaall__ddeellaayy ((iinntt xx))
       Set the number of heart beats it takes for hit points to increase a
       point.

       Definition at line 1294 of file living.c.

   vvooiidd sseett__hheelldd ((iinntt xx))
       Set this living's 'held' timer (paralysis). Turns on the heart beat.

       Reimplemented from IItteemm.

       Definition at line 1118 of file living.c.

       References held.

   vvooiidd sseett__hhpp ((iinntt xx))
       Set this living's total hit points. No range checking is done. Heart
       beat is enabled (for healing).

       Definition at line 1332 of file living.c.

       References hp.

   vvooiidd sseett__jjoobb__ttiittllee ((ssttrriinngg xx))
       Set this object's job title. Because of the way the who command formats
       things, we truncate to 10 characters for players. Mobs can technically
       have longer job titles, but why you'd need to... boggle.

       Definition at line 2034 of file living.c.

       References job_title.

   vvooiidd sseett__kknnoowwnn__ffoorrmmss ((mmaappppiinngg mm))
       Directly sets the mapping of known_forms. See the docs on known_forms
       for structure information.

       Definition at line 1214 of file living.c.

       References known_forms.

   vvooiidd sseett__lleeaaddeerrss ((oobbjjeecctt ** xx))
       Sets the leaders of this object.

       Definition at line 2055 of file living.c.

   vvooiidd sseett__lleevveell ((iinntt xx))
       Sets this living object's level. If the level desired would make this
       object a wizard (or higher), then it is required that the caller have a
       root uid.

       Definition at line 2019 of file living.c.

       References level.

   vvooiidd sseett__mmaannaa ((iinntt xx))
       Set this living's magic points. No range checking. Heart beat enabled.

       Definition at line 1338 of file living.c.

       References mana.

   vvooiidd sseett__mmaannaa__hheeaall__ddeellaayy ((iinntt xx))
       Set the number of heart beats for mana to increase a point.

       Definition at line 1300 of file living.c.

   vvooiidd sseett__nnaammeess__kknnoowwnn ((mmaappppiinngg mm))
       Sets the entire mapping of names/people that this player has been
       introduced to.

       Definition at line 978 of file living.c.

       References names_known.

   vvooiidd sseett__pprroonnoouunn ((mmiixxeedd xx))
       Sets the last thing that you referred to as a pronoun.

       Definition at line 1368 of file living.c.

       References pronoun.

   vvooiidd sseett__rraaccee ((ssttrriinngg ss))
       Set's the full path for this living's race object; This should be a .c
       file that inherits RACE_DIR + 'race'. - Actually... this is not the
       case any more. This string should be simply be set to a string 'human',
       'lizard', etc... where a file 'RACE_DIR + s' (that inherits race.c)
       exists. Am I sufficiently confusing yet? Good. - Al [12.8.02]

       Definition at line 1561 of file living.c.

       References race.

   vvooiidd sseett__rreeaaddiinneessss ((iinntt xx))
       Set this living's current readiness, which describes how ready they are
       to perform an action. Turns on the heart beat.

       Definition at line 1115 of file living.c.

       References readiness.

   vvooiidd sseett__sskkiillll ((ssttrriinngg sskkiillll,, iinntt xx))
       Sets the proficiency level of _s_k_i_l_l to _x. Valid ranges for _x will vary
       between implementations, so no validity checking is performed.

       PPaarraammeetteerrss::

       _s_k_i_l_l  Name of the skill being modified

       _x      The new level for this skillSee qquueerryy__sskkiillll(()).

       Definition at line 1618 of file living.c.

       References query_skill_cap(), query_skill_cost(), and skills.

       Referenced by add_skill(), and assimilate_skill_xp().

   vvooiidd sseett__sskkiillllss ((mmaappppiinngg mm))
       Sets the entire skills mapping.

       Definition at line 993 of file living.c.

       References skills.

   vvooiidd sseett__ssooaakk ((iinntt xx))
       Sets this living's soak preference (on or off).

       Definition at line 1127 of file living.c.

       References soak.

   vvooiidd sseett__ssttaannccee ((iinntt xx))
       This object's current battle stance.

       Definition at line 999 of file living.c.

       References stance.

       Referenced by change_stance().

   vvooiidd sseett__ttaarrggeettss ((oobbjjeecctt ** nneeww__ttaarrggeettss))
       This function sets the entire target queue.

       Definition at line 620 of file living.c.

       References target.

   vvooiidd sseett__ttrruusstt ((mmaappppiinngg xx))
       Sets entire list of people to trust.

       Definition at line 1130 of file living.c.

       References trust.

   vvaarraarrggss vvooiidd sseett__wwcc ((mmiixxeedd wwhhaatt,, iinntt aammtt))
       Set this living's weapon class. Will be recalculated when weapons are
       wielded or removed. Passing in 0 will reset the array.

       Definition at line 1712 of file living.c.

       References wc.

   vvooiidd sseett__wwiimmppyy ((iinntt xx))
       Sets this living's wimpy percentage.

       Definition at line 1124 of file living.c.

       References wimpy.

   vvaarraarrggss iinntt sskkiillll__cchheecckk ((ssttrriinngg sskkiillll,, iinntt oonnee,, iinntt ttwwoo,, iinntt tthhrreeee))
       There are two ways to call this. One is to use it to do a skill check
       directly, in which case you call it like this:

       skill_check( 'name.of.skill' );

       In this case, it will return the result of the skill check itself. If
       you pass in a set of difficulty classes (up to three), then it will
       return which difficulty class the skill check fell into--

       skill_check( 'name.of.skill', 10 ) -- returns 0 or 1. skill_check(
       'name.of.skill', 10, 20 ) -- returns 0-2. skill_check( 'name.of.skill',
       10, 20, 30 ) -- returns 0-3.

       It returns -1 if you don't pass in a valid skill name.

       Definition at line 2747 of file living.c.

       References practice_skill().

       Referenced by take_damage().

   vvooiidd ssttaarrtt__ccoommbbaatt ((oobbjjeecctt eenneemmyy))
       Adds _e_n_e_m_y to this living's combat queue, and starts battle.

       Definition at line 2282 of file living.c.

       References readiness, and target.

   vvaarraarrggss iinntt ssttaatt__cchheecckk ((ssttrriinngg ssttaatt,, iinntt oonnee,, iinntt ttwwoo,, iinntt tthhrreeee))
       Like skill_check, only for stats.

       Definition at line 2787 of file living.c.

   ssttoopp__ccoommbbaatt (())
       Stops attacking everything.

       Definition at line 2306 of file living.c.

       References target.

       Referenced by die().

   iinntt ttaakkee__ddaammaaggee ((mmaappppiinngg wwcc,, iinntt bbpp))
       This function returns an integer giving the number of hit-points
       actually lost when the damage from wc is applied. The function does
       return 0 if passed an invalid wc mapping. It allows damage to be
       reduced to 0 (and returns 0 if this is the case), but it is impossible
       for damage to be negative (if you want damage absorption of some kind,
       you need to find another way).

       It is impossible to determine whether the blow was fatal from this
       function alone -- you should check out take_damage_percent for that.
       Also, qquueerryy__hhpp(()) + take_damage(...) might be negative following this
       function.

       The single parameter, wc, is a mapping of the types of damage and the
       wc of the amount of damage on each. The wc tag types are arbitrary, but
       correspond to the ac types.

       Definition at line 2437 of file living.c.

       References action, add_drink(), add_endurance(), add_hp(),
       query_action(), query_action_name(), query_endurance(), readiness,
       skill_check(), soak, water_loss(), and wc.

       Referenced by take_damage_percent().

   iinntt ttaakkee__ddaammaaggee__ppeerrcceenntt ((mmaappppiinngg wwcc,, iinntt bbpp))
       This function returns an integer giving the number of hit-points
       actually lost as a PERCENTAGE of the remaining hit points. This
       function returns 100 if the blow was a fatal one -- never higher.

       In every other sense, this function corresponds to take_damage, which
       it calls.

       Definition at line 2508 of file living.c.

       References query_hp(), take_damage(), and wc.

   iinntt wwaatteerr__lloossss ((mmaappppiinngg wwcc))
       This function returns the amount of water lost by the victim of a
       particular injury.

       Definition at line 2400 of file living.c.

       References wc.

       Referenced by take_damage().

MMEEMMBBEERR DDAATTAA DDOOCCUUMMEENNTTAATTIIOONN
   iinntt aacc
       Base natural armour class.

       Definition at line 43 of file living.c.

       Referenced by _create_living(), query_average_ac(), query_real_ac(),
       and set_ac().

   nnoossaavvee mmiixxeedd** aaccttiioonn
       Queue of commands to perform in combat. action[0] is next.

       Definition at line 64 of file living.c.

       Referenced by die(), heart_beat(), pop_action(), push_action(),
       query_action(), query_actions(), readiness_required(), set_action(),
       set_actions(), and take_damage().

   nnoossaavvee iinntt aaccttiioonnss__tthhiiss__bbeeaatt
       Counter to limit action repetition per heart beat.

       Definition at line 35 of file living.c.

       Referenced by heart_beat(), and pop_action().

   mmiixxeedd** aalliiggnnmmeenntt
       A three-element array containing information on good/evil,
       lawful/chaotic & custom alignment.

       Definition at line 27 of file living.c.

       Referenced by _create_living(), add_alignment(), query_alignment(),
       query_alignment_string(), set_alignment(), and set_alignment_string().

   iinntt bbuussyy
       A flag for whether the object is performing some long action.

       Definition at line 85 of file living.c.

       Referenced by add_busy(), die(), heart_beat(), query_busy(), and
       set_busy().

   iinntt ccoommbbaatt
       True if this player is in 'combat' mode.

       Definition at line 73 of file living.c.

       Referenced by query_combat_mode().

   ssttrriinngg ccuurrrr__ffoorrmm
       The form you are currently fighting with; indexes into known_forms.

       Definition at line 65 of file living.c.

       Referenced by _create_living(), adopt_best_form(),
       query_action_enabled(), query_form(), query_form_object(), and
       set_form().

   iinntt ddaammaaggee__ppeennddiinngg
       How much damage they are going to take at the end of this hb.

       Definition at line 47 of file living.c.

       Referenced by heart_beat().

   iinntt ddeeaadd
       A flag for whether this player is dead.

       Definition at line 79 of file living.c.

       Referenced by die(), heart_beat(), query_dead(), query_is_living(),
       query_living(), query_look(), and revive().

   ssttrriinngg ddeeffaauulltt__ddooiinngg
       Allows a monster or player to have a default thing to be doing when
       they're doing nothing.

       Definition at line 95 of file living.c.

       Referenced by query_default_doing(), query_doing(), and
       set_default_doing().

   nnoossaavvee ssttrriinngg ddooiinngg
       An extended 'distant' description which describes what the player is
       currently doing.

       Definition at line 97 of file living.c.

       Referenced by heart_beat(), query_doing(), and set_doing().

   nnoossaavvee iinntt ddooiinngg__ddeellaayy
       A count-down. When it hits zero, the 'doing' action resets to null.

       Definition at line 101 of file living.c.

       Referenced by heart_beat(), and set_doing().

   nnoossaavvee oobbjjeecctt ddooiinngg__ttaarrggeett
       Used to evaluate ~targ codes in doing strings.

       Definition at line 99 of file living.c.

       Referenced by query_doing(), and set_doing().

   iinntt ddrriinnkk
       Units of drink the living has drunk.

       Definition at line 55 of file living.c.

       Referenced by add_drink(), decay_food_and_drink(), die(),
       query_drink(), recalc(), revive(), and set_drink().

   nnoossaavvee iinntt eenndd__hheeaall__ccoouunntt
       The current count to end_heal_delay.

       Definition at line 33 of file living.c.

       Referenced by heart_beat().

   iinntt eenndduurraannccee
       How much strenuous activity can I engage in before I become utterly
       exhausted.

       Definition at line 50 of file living.c.

       Referenced by add_endurance(), change_stance(), heart_beat(),
       query_endurance(), and set_endurance().

   mmaappppiinngg eennvv__vvaarrss
       The player's environment variables.

       Definition at line 108 of file living.c.

       Referenced by add_env_var(), Player::catch_tell(), query_env_var(),
       query_env_vars(), remove_env_var(), remove_env_var_item(),
       set_env_var(), and set_env_vars().

   iinntt ffoooodd
       Units of food the living has eaten.

       Definition at line 53 of file living.c.

       Referenced by add_food(), decay_food_and_drink(), die(), query_food(),
       recalc(), revive(), and set_food().

   iinntt ggeennddeerr
       0 = neuter, 1 = male, 2 = female

       Definition at line 25 of file living.c.

       Referenced by query_gender(), and set_gender().

   nnoossaavvee iinntt hheeaall__ccoouunntt
       The current count to heal_delay.

       Definition at line 29 of file living.c.

       Referenced by heart_beat().

   iinntt hheelldd
       A flag for whether the object is the victim of some hold effect.

       Definition at line 83 of file living.c.

       Referenced by add_held(), die(), heart_beat(), query_held(), and
       set_held().

   iinntt hhpp
       How much more damage can be taken before I die.

       Definition at line 46 of file living.c.

       Referenced by _create_living(), add_hp(), die(), heart_beat(),
       query_hp(), revive(), and set_hp().

   nnoossaavvee iinntt iiss__ccoorrppssee
       True if the dead player is a corpse.

       Definition at line 81 of file living.c.

       Referenced by heart_beat(), and revive().

   ssttrriinngg jjoobb__ttiittllee
       What specialized rank does this object have?

       Definition at line 23 of file living.c.

       Referenced by query_job_title(), and set_job_title().

   mmaappppiinngg kknnoowwnn__ffoorrmmss
       A 3d mapping; key is the name of the form, the first value is your
       level, the second is an array of attitude allocations, and the third
       value is your experience with it.

       Definition at line 69 of file living.c.

       Referenced by _create_living(), add_form(), add_form_action(),
       adopt_best_form(), query_known_forms(), remove_form(), and
       set_known_forms().

   iinntt lleevveell
       Level of this object -- Describes its rank.

       Definition at line 21 of file living.c.

       Referenced by assimilate_skill_xp(), Player::load_self(),
       Player::locate_command(), Player::query_invis(), query_level(),
       query_skill(), query_skill_cap(), query_skill_cost(),
       repair_skills_mapping(), set_level(), Player::set_name(),
       Player::valid_read(), and Player::valid_write().

   iinntt mmaannaa
       How much inherent mana am I channeling.

       Definition at line 49 of file living.c.

       Referenced by add_mana(), heart_beat(), query_mana(), and set_mana().

   nnoossaavvee iinntt mmaannaa__hheeaall__ccoouunntt
       The current count to mana_heal_delay.

       Definition at line 31 of file living.c.

       Referenced by heart_beat().

   nnoossaavvee oobbjjeecctt** mmyy__ffoolllloowweerrss
       OObbjjeecctt array to store who is following you.

       Definition at line 104 of file living.c.

       Referenced by add_follower(), check_followers(), move_player(),
       query_followers(), remove_follower(), and set_followers().

   mmaappppiinngg nnaammeess__kknnoowwnn
       A list of people/things whose names I know. This determines how they
       are described to me.

       Definition at line 41 of file living.c.

       Referenced by add_recognize(), query_names_known(), query_recognize(),
       remove_recognize(), and set_names_known().

   nnoossaavvee mmiixxeedd** pprroonnoouunn
       The last neuter, male, and female things you looked at, respectively.

       Definition at line 76 of file living.c.

       Referenced by _create_living(), and set_pronoun().

   ssttrriinngg rraaccee
       This living object's race, human, dwarf, canine, etc...

       Definition at line 93 of file living.c.

       Referenced by query_bp_name(), query_race(), query_race_object(), and
       set_race().

   iinntt rreeaaddiinneessss
       Combat readiness.

       Definition at line 37 of file living.c.

       Referenced by add_readiness(), change_stance(), die(), heart_beat(),
       on_threaten(), pop_action(), query_readiness(), set_readiness(),
       start_combat(), and take_damage().

   mmaappppiinngg sskkiillllss
       A mapping of this living object's skills. The values are the level of
       the skills.

       Definition at line 58 of file living.c.

       Referenced by _create_living(), add_skill(), assimilate_skill_xp(),
       calculate_skill_total(), practice_skill(), query_skill_current_exp(),
       query_skill_level(), query_skill_max_exp(), query_skill_total_exp(),
       query_skills(), remove_skill(), repair_skills_mapping(), set_skill(),
       and set_skills().

   iinntt ssooaakk
       True if this living is attempting to soak damage.

       Definition at line 89 of file living.c.

       Referenced by query_soak(), set_soak(), and take_damage().

   iinntt ssttaannccee
       Current stance (standing, seated, etc...).

       Definition at line 91 of file living.c.

       Referenced by _create_living(), assimilate_skill_xp(), change_stance(),
       decay_food_and_drink(), pop_action(), query_stance(), and set_stance().

   nnoossaavvee oobbjjeecctt** ttaarrggeett
       An array of targets. target[0] is the current target.

       Definition at line 63 of file living.c.

       Referenced by add_hp(), drop_invalid_targets(), pop_action(),
       query_in_combat(), query_target(), query_targets(), set_targets(),
       start_combat(), and stop_combat().

   mmaappppiinngg ttrruusstt
       A list of all players (and npc's) that this player trusts.

       Definition at line 60 of file living.c.

       Referenced by add_trust(), query_trust(), remove_trust(), and
       set_trust().

   mmaappppiinngg wwcc
       WWeeaappoonn class.

       Definition at line 44 of file living.c.

       Referenced by _create_living(), query_wc(), set_wc(), take_damage(),
       take_damage_percent(), and water_loss().

   iinntt wwiimmppyy
       Percentage of hp to run away at.

       Definition at line 87 of file living.c.

       Referenced by add_hp(), query_wimpy(), and set_wimpy().


AAUUTTHHOORR
       Generated automatically by Doxygen for Walraven from the source code.



Walraven                          8 Jan 2004                         Living(3)
