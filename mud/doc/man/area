Area(3)                                                                Area(3)



NNAAMMEE
       Area -

SSYYNNOOPPSSIISS
       Inherits IInnvveenn, DDeesscc, TTiilleeddmmaapp, and OObbjjeecctt.

       Inherited by WWoorrlldd.


   PPuubblliicc MMeetthhooddss
       ccrreeaattee ()
       object ggeett__rroooomm__oobb (string nnaammee)
       qquueerryy__iiss__aarreeaa ()

   PPuubblliicc AAttttrriibbuutteess
       nosave mapping rroooomm__mmaapp

DDEETTAAIILLEEDD DDEESSCCRRIIPPTTIIOONN
       This file defines the area object, which is used for organizing the
       world into meaningful regions. Area objects may contain either other
       area objects, or rooms. The outermost area objects are themselves
       contained by the world object, making the MUD a complete hierarchy.

       Areas behave as 'tiled maps' which means that they allow you to define
       a grid on which your rooms are arranged; this is useful for many
       things, primarily building the room maps or shapes.

       Areas have gone through quite a few design iterations, during which
       time we constantly change our mind as to what we're using them for. In
       general, they are a method for hierarchically organizing rooms.

       Definition at line 24 of file area.c.

MMEEMMBBEERR FFUUNNCCTTIIOONN DDOOCCUUMMEENNTTAATTIIOONN
   ccrreeaattee (())
       Initializes the area object; the default area is 'blank'. Note that
       init_exits is called in the ccrreeaattee(()) function to set up the exits
       object properly (this is necessary for inheriting that object.

       Reimplemented from OObbjjeecctt.

       Reimplemented in WWoorrlldd.

       Definition at line 41 of file area.c.

       References Desc::set_name().

   oobbjjeecctt ggeett__rroooomm__oobb ((ssttrriinngg nnaammee))
       This is used by find_room. If an object implements ggeett__rroooomm__oobb(()), it
       can use something faster than pprreesseenntt(()) for identifying its contents.
       The goal is to use a hash table for room lookup rather than looping
       through the inventory, which grants a big speedup on large areas.

       Definition at line 52 of file area.c.

       References Desc::name, and room_map.

   qquueerryy__iiss__aarreeaa (())
       RReettuurrnnss::
           True. A simple way of identifying if this is an area.

       Definition at line 86 of file area.c.

MMEEMMBBEERR DDAATTAA DDOOCCUUMMEENNTTAATTIIOONN
   nnoossaavvee mmaappppiinngg rroooomm__mmaapp
       An internal cache of room objects, stored as a mapping. Update the
       object to refresh it.

       Definition at line 28 of file area.c.

       Referenced by get_room_ob().


AAUUTTHHOORR
       Generated automatically by Doxygen for Walraven from the source code.



Walraven                          8 Jan 2004                           Area(3)
