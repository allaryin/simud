Player(3)                                                            Player(3)



NNAAMMEE
       Player - Defines the player object.

SSYYNNOOPPSSIISS
       Inherits LLiivviinngg, KKeeyybbooaarrdd, TTeexxttddrraaww, and IInntteerrffaaccee.


   PPllaayyeerr CCrreeaattiioonn
       void ccrreeaattee ()
       int nneeww__ppaasssswwoorrdd (string f)
       void nneeww__ppllaayyeerr (string str)
       void aadddd__ppllaayyeerr__ccoommmmaannddss ()
       varargs void eenntteerr__wwoorrlldd (int reentry)

   VVeerrbbss
       int aalliiaass (string str)
       void mmaakkee__bbuubbbbllee ()
       void rreessttoorree__bbuubbbbllee ()
       void qquuiitt (int quiet)
       int sseeaarrcchh__aalliiaass (string params)
       string * llooccaattee__ccoommmmaanndd (string command)
       int sshhoorrtt__ssaayy (string param)
       int sshhoorrtt__eemmoottee (string param)
       int sshhoorrtt__ccaallll (string param)
       int nnuullll__aaccttiioonn ()
       nomask string mmooddiiffyy__ccoommmmaanndd (string comm)
       string * qquueerryy__ccoommmmaanndd__hhiissttoorryy ()
       string qquueerryy__llaasstt__ccoommmmaanndd ()

   MMeessssaaggiinngg
       varargs void cclliieenntt__iinniitt (int code, string version)
       void ccaattcchh__tteellll (string str, object src, int line_clean)
       int ffiinndd__ccaattcchheerr ()

   PPuubblliicc MMeetthhooddss
       void oonn__ppaaiinntt (object painter)

       QQuueerriieess
       For more information on a query, see the equivalent set function.

           int qquueerryy__iinnvviiss ()
           object qquueerryy__eeddiittiinngg ()
           object qquueerryy__mmaaiilliinngg ()
           object qquueerryy__ccrreeaattiinngg ()
           int qquueerryy__iiss__ppllaayyeerr ()
           int qquueerryy__tteerrmm__wwiiddtthh ()
           int qquueerryy__tteerrmm__hheeiigghhtt ()
           int qquueerryy__pprreevveenntt__sshhaaddooww ()
           string qquueerryy__eemmaaiill ()
           int qquueerryy__hhiiddee__eemmaaiill ()
           int qquueerryy__aannssii ()
           string qquueerryy__ppaatthh ()
           int qquueerryy__llaasstt__llooggiinn ()
           int qquueerryy__llaasstt__llooggoouutt ()
           int qquueerryy__aaggee ()
           string qquueerryy__llaasstt__iipp ()
           int qquueerryy__ddeeccaayy__ttiimmee ()
           int qquueerryy__bbrriieeff ()
           string qquueerryy__cclliieenntt__vveerr ()
           string qquueerryy__cclliieenntt__ccooddee ()
           varargs mixed qquueerryy__iiggnnoorree (string nnaammee)
           string qquueerryy__aaffkk ()
           status qquueerryy__aauuttoohhpp ()
           status qquueerryy__aauuttoorreeaaddyy ()
           string qquueerryy__ttiittllee ()
           string qquueerryy__pprreettiittllee ()
           int qquueerryy__wwaarrnniinnggss ()
           int qquueerryy__tteessttcchhaarr ()
           int qquueerryy__ccrreeaattiioonn__ffllaagg ()
           int qquueerryy__ttooaadd ()
           string qquueerryy__rreeaall__nnaammee ()
           string * qquueerryy__ssaayy__hhiissttoorryy ()
           string * qquueerryy__tteellll__hhiissttoorryy ()
           mapping qquueerryy__mmeemmoo ()
           string qquueerryy__ddiissttaanntt ()
           int qquueerryy__sscceenneerryy ()
           string qquueerryy__ssppeecciiffiicc ()
           int qquueerryy__ccrreeaattiioonn__ddaattee ()
           int qquueerryy__wwiizz__ccrreeaattiioonn__ddaattee ()

       EEDD SSeettuupp

           void sseett__ffllaagg (int i)
           void cclleeaarr__ffllaagg (int i)
           int tteesstt__ffllaagg (int i)

       SSeettss

           void sseett__iinnvviiss (int x)
           void sseett__llaasstt__llooggiinn (int when)
           void sseett__llaasstt__llooggoouutt (int when)
           void sseett__aaggee (int x)
           void sseett__ddeeccaayy__ttiimmee (int x)
           void aadddd__ddeeccaayy__ttiimmee (int x)
           void sseett__ttiittllee (string x)
           void sseett__pprreettiittllee (string x)
           void sseett__bbrriieeff (int x)
           void sseett__aaffkk (string msg)
           void sseett__tteessttcchhaarr (int x)
           int sseett__ccrreeaattiioonn__ffllaagg (int i)
           sseett__ttooaadd (int t)
           void sseett__tteerrmm__wwiiddtthh (int x)
           void sseett__tteerrmm__hheeiigghhtt (int x)
           void sseett__aannssii (int x)
           void sseett__eemmaaiill (string str)
           void sseett__hhiiddee__eemmaaiill (int x)
           void sseett__ppaatthh (string str)
           void sseett__aauuttoohhpp (int x)
           void sseett__aauuttoorreeaaddyy (int x)
           void sseett__nnaammee (string str)
           void sseett__iiggnnoorree (mapping x)
           void aadddd__iiggnnoorree (string nnaammee)
           void rreemmoovvee__iiggnnoorree (string nnaammee)
           void sseett__tteellll__hhiissttoorryy (string *new)
           void aadddd__tteellll (string who, string tell)
           void sseett__mmeemmoo (mapping new)
           void sseett__wwaarrnniinnggss (int x)
           void sseett__ccrreeaattiioonn__ddaattee (int x)
           void sseett__wwiizz__ccrreeaattiioonn__ddaattee (int x)

       PPrroommppttss
       Functions for dealing with players' prompts.

           string qquueerryy__pprroommpptt ()
           void uuppddaattee__pprroommpptt ()
           void wwrriittee__pprroommpptt ()
           string qquueerryy__ddeeffaauulltt__pprroommpptt ()
           void sseett__ccuurrrr__pprroommpptt (string str)
           void ddrroopp__pprroommpptt ()
           void sseett__ddeeffaauulltt__pprroommpptt (string str)

       FFiillee aacccceessss

           varargs void ddiissppllaayy__ffiillee (string nnaammee, int lliinnee)
           mixed vvaalliidd__rreeaadd (string str, mixed ppaatthh)
           mixed vvaalliidd__wwrriittee (string str, mixed ppaatthh)
           string mmaakkee__ppaatthh__aabbssoolluuttee (string str)
           int llooaadd__sseellff (string str)
           void ssaavvee__sseellff ()

   PPuubblliicc AAttttrriibbuutteess
       string ppaasssswwoorrdd
       string eemmaaiill
       int hhiiddee__eemmaaiill
       int ccrreeaattiioonn__ddaattee
       int iinnvviiss
       int wwiizz__ccrreeaattiioonn__ddaattee
       string pprroommpptt
       string ddeeffaauulltt__pprroommpptt
       string ffoorrmmaatt__pprroommpptt
       string ppaatthh
       string pprreettiittllee
       nosave string aaffkk
       string * iinnvveennlliisstt
       nosave string * ccoommmmaanndd__hhiissttoorryy
       nosave string cclliieenntt__vveerr
       int wwaarrnniinnggss
       int llaasstt__llooggiinn
       int llaasstt__llooggoouutt
       int aaggee
       string llaasstt__iipp
       int ddeeccaayy__ttiimmee
       nosave int ccoommmmaanndd__mmaarrkk
       nosave int iiccoommmmaanndd
       string ccuurrrreenntt__llooccaattiioonn
       symbol llooccaattiioonn
       int tteerrmm__wwiiddtthh
       int tteerrmm__hheeiigghhtt
       mapping aalliiaasseess
       mapping iiggnnoorree
       mapping mmeemmoo
       int ffllaaggss
       nosave mixed * ssaayy__hhiissttoorryy
       nosave mixed * tteellll__hhiissttoorryy
       nosave int __iinn__rreecceeiivvee
       int ccrreeaattiioonn__ffllaagg
       nosave string nneewwppaassss
       int ttooaadd

DDEETTAAIILLEEDD DDEESSCCRRIIPPTTIIOONN
       Defines the player object.

       Defines only those properties which apply to players, and not monsters.
       The sets and queries are the same style as in most objects, although
       some of them have special purposes.

       All players have a set of environment variables. These variables are
       designed to let you store information in the player which will be
       remembered even after they log off without having to modify player.c.

       The Player Creation functions are used primarily when a character is
       created. The nneeww__ppaasssswwoorrdd(()) series of functions are also used when the
       player changes his password. The eenntteerr__wwoorrlldd(()) function is called
       immediately after logging in, and sets up the player object in the
       world. To understand how logging on works, you should review this
       function carefully.

       Definition at line 36 of file obj/player.c.

MMEEMMBBEERR FFUUNNCCTTIIOONN DDOOCCUUMMEENNTTAATTIIOONN
   vvooiidd aadddd__ddeeccaayy__ttiimmee ((iinntt xx))
       Adjust the player's decay_time.

       Definition at line 417 of file obj/player.c.

       References decay_time.

   vvooiidd aadddd__iiggnnoorree ((ssttrriinngg nnaammee))
       Add a name to the ignore list.

       Definition at line 549 of file obj/player.c.

       References ignore, and Desc::name.

   vvooiidd aadddd__ppllaayyeerr__ccoommmmaannddss (())
       Adds some standard verbs to the player object. Verbs inherent in the
       player object are difficult to edit, but have the advantage that even
       if the bin verbs are broken, these will still work. It is also
       organizationally simpler to put some verbs in the player, and it is
       ideal for verb abbreviations. You should look at the source code to see
       the list of verbs added.

       Definition at line 936 of file obj/player.c.

       Referenced by enter_world().

   vvooiidd aadddd__tteellll ((ssttrriinngg wwhhoo,, ssttrriinngg tteellll))
       Add a new item to the tell history, and pop the oldest item if needed.

       Definition at line 566 of file obj/player.c.

       References tell_history.

   iinntt aalliiaass ((ssttrriinngg ssttrr))
       This function handles the alias command. It can print a list of current
       aliases, or set up a new alias. This could be made a /bin verb.

       Definition at line 1101 of file obj/player.c.

       References aliases, and term_width.

   vvooiidd ccaattcchh__tteellll ((ssttrriinngg ssttrr,, oobbjjeecctt ssrrcc,, iinntt lliinnee__cclleeaann))
       Handles messages passed to the player.

       Definition at line 1715 of file obj/player.c.

       References _in_receive, command_mark, Living::env_vars, find_catcher(),
       and Interface::imode.

   vvooiidd cclleeaarr__ffllaagg ((iinntt ii))
       Clears an ed flag.

       PPaarraammeetteerrss::

       _i      A number 0-31 giving the flag to be cleared.

       Definition at line 367 of file obj/player.c.

       References flags.

   vvaarraarrggss vvooiidd cclliieenntt__iinniitt ((iinntt ccooddee,, ssttrriinngg vveerrssiioonn))
       Used to initialize portal-style mud clients.

       Definition at line 1696 of file obj/player.c.

       References client_ver.

   vvooiidd ccrreeaattee (())
       This function is called whenever the player object is created. It
       behaves like a constructor. It fills in default values for the standard
       aliases and the terminal size, then calls the create in its parent
       object, /obj/living.c

       Definition at line 718 of file obj/player.c.

       References aliases, set_creation_date(), term_height, and term_width.

   vvaarraarrggss vvooiidd ddiissppllaayy__ffiillee ((ssttrriinngg nnaammee,, iinntt lliinnee))
       Dumps the contents of a file to this_player(). This function is not
       designed to work with very long files. It doesn't dump the file
       contents to this_object().

       PPaarraammeetteerrss::

       _n_a_m_e   Full path of the file to dump to the terminal.

       _l_i_n_e   Zero-indexed line to start dumping from. Defaults to 0.

       Definition at line 1463 of file obj/player.c.

       References Textdraw::line, and Desc::name.

       Referenced by enter_world().

   vvooiidd ddrroopp__pprroommpptt (())
       Sets the prompt to the default prompt, creating a default prompt if
       necessary. This function actually updates the player's prompt.

       Definition at line 695 of file obj/player.c.

       References set_curr_prompt().

   vvaarraarrggss vvooiidd eenntteerr__wwoorrlldd ((iinntt rreeeennttrryy))
       A function that is called every time a player logs in. It handles
       initialization of the player and the standard objects in his inventory
       (currently the chat and security objects). It also performs simple
       functions like printing the news and checking for new mail.

       PPaarraammeetteerrss::

       _r_e_e_n_t_r_y
              The reentry flag determines what type of a login this is. Valid
              values are

       0 for a standard log in.

       1 for a player returning after they have been linkdead

       2 for a 'silent' log in, used by the flash command to recreate the
       player object.


       Definition at line 955 of file obj/player.c.

       References add_player_commands(), creation_flag, current_location,
       default_prompt, display_file(), email, last_ip, last_login, location,
       Living::move_player(), Desc::name, query_invis(), Living::say_all(),
       and set_curr_prompt().

   iinntt ffiinndd__ccaattcchheerr (()) [[ssttaattiicc]]
       An internal function used to figure out whether received text is being
       handled by an interface.

       Definition at line 1705 of file obj/player.c.

       References Interface::imode.

       Referenced by catch_tell().

   iinntt llooaadd__sseellff ((ssttrriinngg ssttrr))
       Loads a .o file's values into this player. This function must be called
       from an object which has root privileges, or it will not work.

       RReettuurrnnss::
           True on success (the values loaded), false on failure.

       Definition at line 1632 of file obj/player.c.

       References Living::level, Desc::name, and restore_bubble().

   ssttrriinngg** llooccaattee__ccoommmmaanndd ((ssttrriinngg ccoommmmaanndd))
       Searches through the bin verbs given in bin_paths and returns an array
       of all matching object files. If no matches are found, an empty array
       is returned. The .c's are omitted from the object file names.

       Definition at line 1269 of file obj/player.c.

       References Living::add_env_var(), Living::level, and
       Living::query_env_var().

   vvooiidd mmaakkee__bbuubbbbllee (())
       This is the inventory bubble code. It moves your inventory to a bubble
       where it is kept until you log in again.

       Definition at line 1156 of file obj/player.c.

       References Desc::name.

       Referenced by quit().

   ssttrriinngg mmaakkee__ppaatthh__aabbssoolluuttee ((ssttrriinngg ssttrr))
       Converts a relative path reference to a global one. This function will
       recognize such things as ~'s for home directories and .. or . for
       previous and current directory. The file need not exist for
       make_path_absolute to work; its rules are independent of the contents
       of the file system.

       This function is intended to replace vvaalliidd__rreeaadd(()) and vvaalliidd__wwrriittee(()) in
       player.c Currently the only thing real purpose of this valid_read/write
       pair is to make paths absolute. When they are deleted, this function
       should be used instead.

       PPaarraammeetteerrss::

       _s_t_r    The path to be made absolute

       Definition at line 1580 of file obj/player.c.

       References Desc::name, and query_path().

   nnoommaasskk ssttrriinngg mmooddiiffyy__ccoommmmaanndd ((ssttrriinngg ccoommmm))
       An internal MUDlib function used to parse aliases, keep a command
       history, and so on. This function is called by the driver each time a
       command is typed by this player. It is nonsensical to call it
       otherwise.

       Definition at line 1362 of file obj/player.c.

       References aliases, command_history, command_mark, and icommand.

   iinntt nneeww__ppaasssswwoorrdd ((ssttrriinngg ff))
       Internal function, used for setting passwords. This function returns 1,
       as it is also used as the new_password verb.

       TTooddoo::
            This code uses input_to, one of the last pieces of code on the MUD
           that does so unnecessarily. It could be profitably rewritten to use
           an interface.

       Definition at line 733 of file obj/player.c.

   vvooiidd nneeww__ppllaayyeerr ((ssttrriinngg ssttrr))
       An internal function, used during character creation.

       Definition at line 816 of file obj/player.c.

       References creation_flag, and save_self().

   iinntt nnuullll__aaccttiioonn (())
       Does nothing.

       RReettuurrnnss::
           1

       Definition at line 1353 of file obj/player.c.

   vvooiidd oonn__ppaaiinntt ((oobbjjeecctt ppaaiinntteerr))
       Paint the player. Do it in white if they are this_player().

       Reimplemented from IItteemm.

       Definition at line 330 of file obj/player.c.

       References Desc::name, and query_invis().

   iinntt qquueerryy__aannssii (())
       RReettuurrnnss::
           True, if this player can receive ANSI codes (for colors, cursor
           movement, etc.); false otherwise.

       Definition at line 192 of file obj/player.c.

       References Living::query_env_var().

   ssttrriinngg** qquueerryy__ccoommmmaanndd__hhiissttoorryy (())
       Returns an array of recently typed commands. The most recent is not
       necessarily the first in the array, as it is cyclical.

       Definition at line 1435 of file obj/player.c.

       References command_history, and Living::query_level().

   oobbjjeecctt qquueerryy__ccrreeaattiinngg (())
       RReettuurrnnss::
           True if the player is going through character creation

       Definition at line 168 of file obj/player.c.

   iinntt qquueerryy__ccrreeaattiioonn__ddaattee (())
       RReettuurrnnss::
           Seconds since epoch time that the player first entered the game.

       Definition at line 317 of file obj/player.c.

       References creation_date.

   iinntt qquueerryy__ccrreeaattiioonn__ffllaagg (())
       Returns creation_flag.

       Definition at line 254 of file obj/player.c.

       References creation_flag.

   iinntt qquueerryy__ddeeccaayy__ttiimmee (())
       RReettuurrnnss::
           The player's age the last time living::decay_food() was called on
           them.

       Definition at line 202 of file obj/player.c.

       References age, decay_time, and last_login.

   ssttrriinngg qquueerryy__ddeeffaauulltt__pprroommpptt (())
       RReettuurrnnss::
           This player's 'default' prompt. The default prompt is the one that
           is restored when the interface stack exits to the normal MUD
           interface.

       Definition at line 663 of file obj/player.c.

       References default_prompt.

   ssttrriinngg qquueerryy__ddiissttaanntt (())
       RReettuurrnnss::
           A modified distant string that handles recognition.

       Reimplemented from LLiivviinngg.

       Definition at line 301 of file obj/player.c.

       References Desc::query_cap_name().

   oobbjjeecctt qquueerryy__eeddiittiinngg (())
       RReettuurrnnss::
           True if the player is using the full-screen editor

       Definition at line 160 of file obj/player.c.

   ssttrriinngg qquueerryy__eemmaaiill (())
       RReettuurrnnss::
           This player's email address.

       Definition at line 188 of file obj/player.c.

       References email.

   iinntt qquueerryy__hhiiddee__eemmaaiill (())
       RReettuurrnnss::
           True if this player's email address is hidden.

       Definition at line 190 of file obj/player.c.

       References hide_email.

   vvaarraarrggss mmiixxeedd qquueerryy__iiggnnoorree ((ssttrriinngg nnaammee))
       RReettuurrnnss::
           If name is specified, whether they are being ignored, otherwise,
           returns the entire ignore list.

       Definition at line 214 of file obj/player.c.

       References ignore, and Desc::name.

   iinntt qquueerryy__iinnvviiss (())
       RReettuurrnnss::
           True if this wizard is invisible

       Definition at line 152 of file obj/player.c.

       References invis, and Living::level.

       Referenced by enter_world(), on_paint(), and quit().

   iinntt qquueerryy__iiss__ppllaayyeerr (())
       Queries whether this object is a player.

       WWaarrnniinngg::
           qquueerryy__iiss__ppllaayyeerr(()) is for convenience, and is obviously forgeable.
           Do not use it for security purposes.

       RReettuurrnnss::
           True, indicating that this object is a player.

       Definition at line 176 of file obj/player.c.

   ssttrriinngg qquueerryy__llaasstt__ccoommmmaanndd (())
       Returns the last command typed by the player.

       Definition at line 1443 of file obj/player.c.

       References command_history, icommand, and Living::query_level().

   iinntt qquueerryy__llaasstt__llooggiinn (())
       RReettuurrnnss::
           An integer giving the date/time when this player last logged in.

       Definition at line 196 of file obj/player.c.

       References last_login.

   oobbjjeecctt qquueerryy__mmaaiilliinngg (())
       RReettuurrnnss::
           True if the player is in the mailer

       Definition at line 164 of file obj/player.c.

   mmaappppiinngg qquueerryy__mmeemmoo (())
       This function hands the memo mapping over to a verb for tweaking.

       Definition at line 296 of file obj/player.c.

       References memo.

   ssttrriinngg qquueerryy__ppaatthh (())
       RReettuurrnnss::
           The current working directory for this player. Only applies to
           wizards.

       Definition at line 194 of file obj/player.c.

       References Desc::name, and path.

       Referenced by make_path_absolute(), valid_read(), and valid_write().

   iinntt qquueerryy__pprreevveenntt__sshhaaddooww (())
       Shadowing the player object (i.e. allowing an object to replace some of
       its functions with alternative definitions) is a gaping security hole.
       This function always returns true, instructing the driver to forbid
       shadowing of this object.

       Definition at line 186 of file obj/player.c.

   ssttrriinngg qquueerryy__pprroommpptt (())
       RReettuurrnnss::
           The player's current prompt. This is the string printed to the
           terminal each time the player types a command or pushes enter. If
           no prompt has been set, this function returns a default one.See
           also qquueerryy__ddeeffaauulltt__pprroommpptt(()).

       Definition at line 634 of file obj/player.c.

       References default_prompt, format_prompt, and prompt.

       Referenced by update_prompt(), and write_prompt().

   ssttrriinngg qquueerryy__rreeaall__nnaammee (())
       An archaic function occasionally used to differentiate between the
       player's current name and his real name. This MUDlib prefers to assume
       that the player's current name is their real name, and that other
       variations on the name are stored in alternative variables. This
       function returns the current name.

       Definition at line 265 of file obj/player.c.

       References Desc::name.

   ssttrriinngg** qquueerryy__ssaayy__hhiissttoorryy (())
       RReettuurrnnss::
           The player's say history array

       Definition at line 270 of file obj/player.c.

       References say_history.

   ssttrriinngg qquueerryy__ssppeecciiffiicc (())
       RReettuurrnnss::
           A modified specific string that handles recognition.

       Reimplemented from LLiivviinngg.

       Definition at line 310 of file obj/player.c.

       References Desc::query_cap_name().

   ssttrriinngg** qquueerryy__tteellll__hhiissttoorryy (())
       RReettuurrnnss::
           The player's tell history array

       Definition at line 282 of file obj/player.c.

       References tell_history.

   iinntt qquueerryy__tteerrmm__hheeiigghhtt (())
       RReettuurrnnss::
           This player's terminal height (in rows)

       Definition at line 180 of file obj/player.c.

       References term_height.

   iinntt qquueerryy__tteerrmm__wwiiddtthh (())
       RReettuurrnnss::
           This player's terminal width (in columns)

       Definition at line 178 of file obj/player.c.

       References term_width.

       Referenced by quit().

   iinntt qquueerryy__tteessttcchhaarr (())
       RReettuurrnnss::
           True (1) if the character is a testchar. This is tested by checking
           if the 'type' variable is set to 'testchar\n'.

       Definition at line 246 of file obj/player.c.

   iinntt qquueerryy__ttooaadd (())
       Returns toad flag.

       Definition at line 257 of file obj/player.c.

       References toad.

   iinntt qquueerryy__wwiizz__ccrreeaattiioonn__ddaattee (())
       RReettuurrnnss::
           Seconds since epoch time that the player became a wizard. 0 if not
           a wizard.

       Definition at line 322 of file obj/player.c.

       References wiz_creation_date.

   vvooiidd qquuiitt ((iinntt qquuiieett))
       This player quits the game. The quiet variable may be set to several
       different values to reflect the reason for quitting.

       PPaarraammeetteerrss::

       _q_u_i_e_t  This variable may be set to:

       0 to quit normally

       1 to quit normally, but with absolutely no messages.

       2 to quit without updating the log files. This is used by the flash
       command.

       3 to quit because the player has become linkdead. This is not actually
       quiet, but displays a different message indicating that the player is
       linkdead.


       Definition at line 1204 of file obj/player.c.

       References age, last_login, last_logout, make_bubble(),
       Desc::query_cap_name(), query_invis(), query_term_width(), save_self(),
       and Living::say_all().

   vvooiidd rreemmoovvee__iiggnnoorree ((ssttrriinngg nnaammee))
       Removes a name from the ignore list.

       Definition at line 555 of file obj/player.c.

       References ignore, and Desc::name.

   vvooiidd rreessttoorree__bbuubbbbllee (())
       Restore a player's inventory to him from the inventory bubble where it
       has been sitting.

       Definition at line 1179 of file obj/player.c.

       References Desc::name.

       Referenced by load_self().

   vvooiidd ssaavvee__sseellff (())
       Saves this player's settings to the player's save file. The name of the
       save file is automagically determined, and is based on the player's
       name. Anyone may call this function, it is quite safe. This also calls
       save_self in all the objects in the player's inventory and saves them
       instantly.

       TTooddoo::
            When inventory saving is no longer implemented by a call_out (in
           saveload.c), this function no longer needs to use deep_inventory to
           save the player's inventory.

       Definition at line 1672 of file obj/player.c.

       References current_location, location, and Desc::name.

       Referenced by new_player(), and quit().

   iinntt sseeaarrcchh__aalliiaass ((ssttrriinngg ppaarraammss))
       Searches the player's list of aliases and if it finds a match, it
       executes it. Not intended for outside calls.

       Definition at line 1253 of file obj/player.c.

       References aliases.

   vvooiidd sseett__aaffkk ((ssttrriinngg mmssgg))
       Sets the character's afk message. 0 means they have returned.

       Definition at line 439 of file obj/player.c.

       References afk.

   vvooiidd sseett__aaggee ((iinntt xx))
       Sets a player's age, measured in seconds.

       Definition at line 411 of file obj/player.c.

       References age.

   vvooiidd sseett__aannssii ((iinntt xx))
       Turns ANSI codes on or off. Pass true to turn ANSI codes on, false to
       turn them off. ANSI codes are special character sequences which are not
       printed literally. When a terminal receives an ANSI code it interprets
       it as an instruction. ANSI codes are used for colors, moving the
       cursor, clearing the terminal window, and so on.

       Definition at line 499 of file obj/player.c.

       References Living::set_env_var().

   vvooiidd sseett__aauuttoohhpp ((iinntt xx))
       Sets the player's autohp preference. This is queried each time they are
       dealt damage, and will force them to check their hp if this is turned
       on.

       Definition at line 520 of file obj/player.c.

   vvooiidd sseett__aauuttoorreeaaddyy ((iinntt xx))
       Sets the player's autoready preference. If turned on, they will see
       their ready meter every heartbeat during combat. There are 3 settings,
       1-3 for low to high spam.

       Definition at line 526 of file obj/player.c.

   vvooiidd sseett__bbrriieeff ((iinntt xx))
       The brief flag may be set to either true (1) or false (0). If true, the
       player will only see room titles, not full room descriptions, as they
       move from room to room.

       Definition at line 435 of file obj/player.c.

   vvooiidd sseett__ccrreeaattiioonn__ddaattee ((iinntt xx))
       RReettuurrnnss::
           Sets the seconds since epoch time that the player first entered the
           game.

       Definition at line 607 of file obj/player.c.

       References creation_date.

       Referenced by create().

   iinntt sseett__ccrreeaattiioonn__ffllaagg ((iinntt ii))
       Sets creation flag.

       Definition at line 455 of file obj/player.c.

       References creation_flag.

   vvooiidd sseett__ccuurrrr__pprroommpptt ((ssttrriinngg ssttrr))
       Sets the current prompt to _s_t_r.

       WWaarrnniinngg::
           The value for str may contain tilde codes, but they will be
           evaluated immediately, not each time the prompt is displayed. For
           example, if you place ~CDEF into the prompt, and it is evaluated at
           nighttime and ~CDEF is a deep blue, then when daytime comes the
           prompt will still be blue. Closures are needed to fix this, but
           this hasn't been done yet.

       PPaarraammeetteerrss::

       _s_t_r    The string to be used as the new prompt. If blank or 0, the
              default prompt is used.

       Definition at line 678 of file obj/player.c.

       References default_prompt, prompt, and update_prompt().

       Referenced by drop_prompt(), and enter_world().

   vvooiidd sseett__ddeeccaayy__ttiimmee ((iinntt xx))
       Set the player's decay_time manually. /note ddeeccaayy__ffoooodd(()) calls
       aadddd__ddeeccaayy__ttiimmee(()), not this function.

       Definition at line 415 of file obj/player.c.

       References decay_time.

   vvooiidd sseett__ddeeffaauulltt__pprroommpptt ((ssttrriinngg ssttrr))
       Sets the default prompt to _s_t_r, but doesn't actually update the prompt.
       The default prompt is the one that you return to when the player exits
       an interface.

       See reset_prompt().

       Definition at line 703 of file obj/player.c.

       References default_prompt.

   vvooiidd sseett__eemmaaiill ((ssttrriinngg ssttrr))
       Sets the player's email address.

       Definition at line 502 of file obj/player.c.

       References email.

   vvooiidd sseett__ffllaagg ((iinntt ii))
       Sets an ed flag. See also ed.c.

       PPaarraammeetteerrss::

       _i      A number 0-31 giving the flag to be set.

       Definition at line 361 of file obj/player.c.

       References flags.

   vvooiidd sseett__hhiiddee__eemmaaiill ((iinntt xx))
       Set to 1 if the player wants their email address hidden.

       Definition at line 504 of file obj/player.c.

       References hide_email.

   vvooiidd sseett__iiggnnoorree ((mmaappppiinngg xx))
       Sets entire list of people to ignore.

       Definition at line 546 of file obj/player.c.

       References ignore.

   vvooiidd sseett__iinnvviiss ((iinntt xx))
       Sets this wizard as visible (0) or invisible (1).

       Definition at line 384 of file obj/player.c.

       References invis, and Living::query_level().

   vvooiidd sseett__llaasstt__llooggiinn ((iinntt wwhheenn))
       Sets the time, in seconds, when the player last logged in. This is
       measured in seconds since January 1, 1970. You may get the current time
       according to the system clock by using the time() efun. This value is
       used to calculate an updated value for the player's age when they log
       out, and is also used by the finger command to have age appear to
       increase while the player is logged in.

       See also sseett__llaasstt__llooggoouutt(()).

       Definition at line 403 of file obj/player.c.

       References last_login.

   vvooiidd sseett__llaasstt__llooggoouutt ((iinntt wwhheenn))
       Sets the time that the player last logged out, similar to
       sseett__llaasstt__llooggiinn(()). Used to calculate an updated value for the player's
       age when they log out.

       Definition at line 408 of file obj/player.c.

       References last_logout.

   vvooiidd sseett__mmeemmoo ((mmaappppiinngg nneeww))
       Changes the contents of the memo mapping, I'm leaving the majority of
       this code in the hands of the memo verb(s?) for the sake of sanity in
       debugging and whatnot.

       Definition at line 592 of file obj/player.c.

       References memo.

   vvooiidd sseett__nnaammee ((ssttrriinngg ssttrr))
       Sets the name of this player. This is an overridden version of
       set_name, modified so that only objects with root privileges may change
       the player's name. This is important because the name is used in
       determining the file name of the player's save file.

       Reimplemented from DDeesscc.

       Definition at line 535 of file obj/player.c.

       References Living::level, Desc::name, and Desc::query_cap_name().

   vvooiidd sseett__ppaatthh ((ssttrriinngg ssttrr))
       Sets the player's current directory. This will affect wizards, mainly,
       since players do not use directory navigation while they're playing.

       WWaarrnniinngg::
           This function expects an absolute path. If you wish to change to a
           relative path, such as ../obj, first call mmaakkee__ppaatthh__aabbssoolluuttee(()) and
           then pass the return value to here. The cd command in cd.c uses
           this function.

       Definition at line 514 of file obj/player.c.

       References path.

   vvooiidd sseett__pprreettiittllee ((ssttrriinngg xx))
       Sets a prefix (or pretitle) for the player's name, usually printed out
       together with the title. It can be such things as 'Mrs.', 'Sir',
       'H.R.H.' or what have you.

       See sseett__ttiittllee(()).

       Definition at line 430 of file obj/player.c.

       References pretitle.

   vvooiidd sseett__tteellll__hhiissttoorryy ((ssttrriinngg ** nneeww))
       Change the contents of the tell history array.

       Definition at line 561 of file obj/player.c.

       References tell_history.

   vvooiidd sseett__tteerrmm__hheeiigghhtt ((iinntt xx))
       Sets the terminal height for this player. This is mainly used for
       special purpose file display, such as the more command, or the full
       screen text editor. The minimum value is 3, although some code (such as
       the editor) is unlikely to work properly unless it is at least 10.

       See also sseett__tteerrmm__wwiiddtthh(()).

       Definition at line 487 of file obj/player.c.

       References term_height.

   vvooiidd sseett__tteerrmm__wwiiddtthh ((iinntt xx))
       Sets the line-wrap width for this player. This function is is used by
       the termsize verb to change wrapping width. The minimum value is 20; if
       you set it any lower, it will set it to 20.

       See also sseett__tteerrmm__hheeiigghhtt(()).

       Definition at line 474 of file obj/player.c.

       References term_width.

   vvooiidd sseett__tteessttcchhaarr ((iinntt xx))
       Sets whether this character is a test character. Wizards sometimes
       create test characters which they use to test their areas. In order to
       mark these as different from normal players, use the 'testchar' verb,
       which calls this function. Passing it 1 makes the character a test
       character, passing it 0 turns this off.

       WWaarrnniinngg::
           Modifies the type field inherited from desc.

       Definition at line 448 of file obj/player.c.

       References Desc::set_type().

   vvooiidd sseett__ttiittllee ((ssttrriinngg xx))
       Sets the player's title, which is appended to the name in some
       circumstances (notably the finger command).

       See sseett__pprreettiittllee(()).

       Definition at line 423 of file obj/player.c.

   sseett__ttooaadd ((iinntt tt))
       Sets and logs the toad flag.

       Definition at line 458 of file obj/player.c.

       References toad.

   vvooiidd sseett__wwaarrnniinnggss ((iinntt xx))
       Change the number of warnings a player has. Do NOT call if you're not a
       root UID object!

       Definition at line 599 of file obj/player.c.

       References warnings.

   vvooiidd sseett__wwiizz__ccrreeaattiioonn__ddaattee ((iinntt xx))
       RReettuurrnnss::
           Set the seconds since epoch time that the player became a wizard. 0
           if not a wizard.

       Definition at line 613 of file obj/player.c.

       References wiz_creation_date.

   iinntt sshhoorrtt__ccaallll ((ssttrriinngg ppaarraamm))
       Used for the short form of the call command (@). Not intended for
       outside calls.

       Definition at line 1340 of file obj/player.c.

   iinntt sshhoorrtt__eemmoottee ((ssttrriinngg ppaarraamm))
       Used for the short form of the emote command (:). Not intended for
       outside calls.

       Definition at line 1329 of file obj/player.c.

   iinntt sshhoorrtt__ssaayy ((ssttrriinngg ppaarraamm))
       Used for the short form of the say command ('). Not intended for
       outside calls.

       Definition at line 1318 of file obj/player.c.

   iinntt tteesstt__ffllaagg ((iinntt ii))
       RReettuurrnnss::
           0 if the flag given by i is cleared, non-zero if it is not.

       PPaarraammeetteerrss::

       _i      The flag number 0-31 which is to be tested.

       Definition at line 373 of file obj/player.c.

       References flags.

   vvooiidd uuppddaattee__pprroommpptt (())
       Verifies that the prompt is set to something valid and then calls the
       set_prompt efun to update the prompt stored in the driver for this
       player.

       Definition at line 647 of file obj/player.c.

       References format_prompt, prompt, and query_prompt().

       Referenced by set_curr_prompt().

   mmiixxeedd vvaalliidd__rreeaadd ((ssttrriinngg ssttrr,, mmiixxeedd ppaatthh))
       (Obsolete) Checks read access and resolves a file's full path.

       WWaarrnniinngg::
           This function is obsolete. You should not be using it in new code.
           It issues a warning on the ddeebbuugg(()) channel whenever it is called
           (see chat.c). Its functionality has been completely replaced by
           mmaakkee__ppaatthh__aabbssoolluuttee(()) and query_read_access().

       Definition at line 1482 of file obj/player.c.

       References Living::level, Desc::name, path, and query_path().

       Referenced by valid_write().

   mmiixxeedd vvaalliidd__wwrriittee ((ssttrriinngg ssttrr,, mmiixxeedd ppaatthh))
       (Obsolete) Checks write access and resolves a file's full path.

       WWaarrnniinngg::
           This function is obsolete. You should not be using it in new code.
           It issues a warning on the ddeebbuugg(()) channel whenever it is called
           (see chat.c). Its functionality has been completely replaced by
           mmaakkee__ppaatthh__aabbssoolluuttee(()) and query_write_access().

       Definition at line 1537 of file obj/player.c.

       References Living::level, Desc::name, path, query_path(), and
       valid_read().

   vvooiidd wwrriittee__pprroommpptt (())
       Equivalent to write(this_player()->qquueerryy__pprroommpptt(()));

       Definition at line 654 of file obj/player.c.

       References command_mark, and query_prompt().

MMEEMMBBEERR DDAATTAA DDOOCCUUMMEENNTTAATTIIOONN
   nnoossaavvee iinntt __iinn__rreecceeiivvee
       A state variable used for input capture.

       Definition at line 132 of file obj/player.c.

       Referenced by catch_tell().

   nnoossaavvee ssttrriinngg aaffkk
       False (0) if this player is not AFK, Set to a string giving an AFK
       message if they are.

       TTooddoo::
            Implement afk commands and add set_afk, query_afk to the player.

       Definition at line 71 of file obj/player.c.

       Referenced by set_afk().

   iinntt aaggee
       This player's total age on the MUD, in seconds.

       Definition at line 83 of file obj/player.c.

       Referenced by query_decay_time(), quit(), and set_age().

   mmaappppiinngg aalliiaasseess
       A mapping of user-defined aliases.

       Definition at line 107 of file obj/player.c.

       Referenced by alias(), create(), modify_command(), and search_alias().

   nnoossaavvee ssttrriinngg cclliieenntt__vveerr
       Contains mud-client information for multimedia, etc.

       Definition at line 77 of file obj/player.c.

       Referenced by client_init().

   nnoossaavvee ssttrriinngg** ccoommmmaanndd__hhiissttoorryy
       A list of recently typed commands, used by %% (the 'quicktyper').

       Definition at line 75 of file obj/player.c.

       Referenced by modify_command(), query_command_history(), and
       query_last_command().

   nnoossaavvee iinntt ccoommmmaanndd__mmaarrkk
       TRUE if you've already been interrupted since you last issued a
       command. Set to FALSE each time modify_command is called.

       Definition at line 95 of file obj/player.c.

       Referenced by catch_tell(), modify_command(), and write_prompt().

   iinntt ccrreeaattiioonn__ddaattee
       Time when player first entered the game, in seconds since epoch time.

       Definition at line 58 of file obj/player.c.

       Referenced by query_creation_date(), and set_creation_date().

   iinntt ccrreeaattiioonn__ffllaagg
       A state variable used at object creation time.

       Definition at line 135 of file obj/player.c.

       Referenced by enter_world(), new_player(), query_creation_flag(), and
       set_creation_flag().

   ssttrriinngg ccuurrrreenntt__llooccaattiioonn
       This variable tracks where you quit, so you start there. It's a room
       reference.

       Definition at line 99 of file obj/player.c.

       Referenced by enter_world(), and save_self().

   iinntt ddeeccaayy__ttiimmee
       Used for fairness reasons. This variable tracks the player's age when
       their food and drink levels were last decayed. This way they don't get
       overcharged or undercharged in food and drink for quitting right after
       or right before a food regen tick.

       Definition at line 91 of file obj/player.c.

       Referenced by add_decay_time(), query_decay_time(), and
       set_decay_time().

   ssttrriinngg ddeeffaauulltt__pprroommpptt
       The player's DEFAULT prompt -- what it reverts to after an interface.

       Definition at line 66 of file obj/player.c.

       Referenced by enter_world(), query_default_prompt(), query_prompt(),
       set_curr_prompt(), and set_default_prompt().

   ssttrriinngg eemmaaiill
       The player's email address, as they entered it.

       Definition at line 54 of file obj/player.c.

       Referenced by enter_world(), query_email(), and set_email().

   iinntt ffllaaggss
       ed flags.

       Definition at line 123 of file obj/player.c.

       Referenced by clear_flag(), set_flag(), and test_flag().

   ssttrriinngg ffoorrmmaatt__pprroommpptt
       The player's prompt with ANSI, etc. already added in.

       Definition at line 66 of file obj/player.c.

       Referenced by query_prompt(), and update_prompt().

   iinntt hhiiddee__eemmaaiill
       True if the player wants their email address kept secret, false if
       finger can display it.

       Definition at line 56 of file obj/player.c.

       Referenced by query_hide_email(), and set_hide_email().

   nnoossaavvee iinntt iiccoommmmaanndd
       Internal flag used for command history.

       Definition at line 96 of file obj/player.c.

       Referenced by modify_command(), and query_last_command().

   mmaappppiinngg iiggnnoorree
       A list of boneheads that I wish to block tells from. Functionality
       might eventually be added to block chats from these people as well, but
       we shall see...

       Definition at line 115 of file obj/player.c.

       Referenced by add_ignore(), query_ignore(), remove_ignore(), and
       set_ignore().

   ssttrriinngg** iinnvveennlliisstt
       Used by saveload routines -- the player's inventory.

       Definition at line 74 of file obj/player.c.

   iinntt iinnvviiss
       0 is normal, 1 is totally invis, 2 is invis only in rooms (show up on
       channels, wholist, quit, etc)

       Definition at line 61 of file obj/player.c.

       Referenced by query_invis(), and set_invis().

   ssttrriinngg llaasstt__iipp
       Last address player logged in from.

       Definition at line 85 of file obj/player.c.

       Referenced by enter_world().

   iinntt llaasstt__llooggiinn
       Timestamp for when this player's last login was.

       Definition at line 83 of file obj/player.c.

       Referenced by enter_world(), query_decay_time(), query_last_login(),
       quit(), and set_last_login().

   iinntt llaasstt__llooggoouutt
       Timestamp for when this player last logged out.

       Definition at line 83 of file obj/player.c.

       Referenced by quit(), and set_last_logout().

   ssyymmbbooll llooccaattiioonn
       A newer system for tracking player location. Will phase out
       current_location.

       Definition at line 101 of file obj/player.c.

       Referenced by enter_world(), and save_self().

   mmaappppiinngg mmeemmoo
       A mapping of notes-to-self by the player (very similar to the global
       todo list)

       Definition at line 120 of file obj/player.c.

       Referenced by query_memo(), and set_memo().

   nnoossaavvee ssttrriinngg nneewwppaassss
       Used while setting a password.

       Definition at line 138 of file obj/player.c.

   ssttrriinngg ppaasssswwoorrdd
       The player's password, stored in an encrypted form.

       Definition at line 52 of file obj/player.c.

   ssttrriinngg ppaatthh
       The 'current directory' for wizards, not used by players.

       Definition at line 68 of file obj/player.c.

       Referenced by query_path(), set_path(), valid_read(), and
       valid_write().

   ssttrriinngg pprreettiittllee
       The player's title follows their name, and pretitle precedes it. See
       query_title().

       Definition at line 69 of file obj/player.c.

       Referenced by set_pretitle().

   ssttrriinngg pprroommpptt
       The player's CURRENT prompt -- what is showing now.

       Definition at line 66 of file obj/player.c.

       Referenced by query_prompt(), set_curr_prompt(), and update_prompt().

   nnoossaavvee mmiixxeedd** ssaayy__hhiissttoorryy
       The last MAX_SAY_HISTORY says directed at this player.

       Definition at line 126 of file obj/player.c.

       Referenced by query_say_history().

   nnoossaavvee mmiixxeedd** tteellll__hhiissttoorryy
       The last MAX_TELL_HISTORY tells directed at this player.

       Definition at line 129 of file obj/player.c.

       Referenced by add_tell(), query_tell_history(), and set_tell_history().

   iinntt tteerrmm__hheeiigghhtt
       This player's terminal height (their setting, defaults to 24).

       Definition at line 104 of file obj/player.c.

       Referenced by create(), query_term_height(), and set_term_height().

   iinntt tteerrmm__wwiiddtthh
       This player's terminal width (as they set it, defaults to 79).

       Definition at line 104 of file obj/player.c.

       Referenced by alias(), create(), query_term_width(), and
       set_term_width().

   iinntt ttooaadd
       Whether someone has been toaded -- they effectively cease to exist.

       Definition at line 141 of file obj/player.c.

       Referenced by query_toad(), and set_toad().

   iinntt wwaarrnniinnggss
       For wizards who're on probation.

       Definition at line 80 of file obj/player.c.

       Referenced by set_warnings().

   iinntt wwiizz__ccrreeaattiioonn__ddaattee
       Time when player became a wizard, in seconds since epoch time.

       Definition at line 63 of file obj/player.c.

       Referenced by query_wiz_creation_date(), and set_wiz_creation_date().


AAUUTTHHOORR
       Generated automatically by Doxygen for Walraven from the source code.



Walraven                          8 Jan 2004                         Player(3)
