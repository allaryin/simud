Armour(3)                                                            Armour(3)



NNAAMMEE
       Armour -

SSYYNNOOPPSSIISS
   PPuubblliicc MMeetthhooddss
       string aarrmmoouurr__iinnffoo ()
       varargs mixed qquueerryy__aacc (string param)
       varargs mixed qquueerryy__rreeqquuiirreemmeenntt (string req)
       varargs int qquueerryy__rreeqquuiirreemmeennttss__mmeett (object player, int silent)
       varargs void sseett__aacc (mixed one, int two)
       int qquueerryy__aarrmmoouurr ()
       string aarrmmoouurr__iinnffoo ()
       varargs mixed qquueerryy__aacc (string param)
       varargs mixed qquueerryy__rreeqquuiirreemmeenntt (string req)
       varargs int qquueerryy__rreeqquuiirreemmeennttss__mmeett (object player, int silent)
       varargs void sseett__aacc (mixed one, int two)
       int qquueerryy__aarrmmoouurr ()

DDEETTAAIILLEEDD DDEESSCCRRIIPPTTIIOONN
       TTooddoo::
            Document this file

       Definition at line 5 of file inherit/armour.c.

MMEEMMBBEERR FFUUNNCCTTIIOONN DDOOCCUUMMEENNTTAATTIIOONN
   ssttrriinngg aarrmmoouurr__iinnffoo (())
       OObbjjeecctt editor information.

       Definition at line 21 of file battle/armour.c.

   ssttrriinngg aarrmmoouurr__iinnffoo (())
       OObbjjeecctt editor information.

       Definition at line 14 of file inherit/armour.c.

   vvaarraarrggss mmiixxeedd qquueerryy__aacc ((ssttrriinngg ppaarraamm))
       Return the armour class of this object. If called with a string
       parameter, then one particular ac is returned (ie, query_ac('fire')
       returns the armour's fire ac).

       If called without any parameters and there are any modifiers defined,
       the  object's entire ac mapping is returned. Otherwise, the base ac is
       returned.

       Definition at line 36 of file battle/armour.c.

   vvaarraarrggss mmiixxeedd qquueerryy__aacc ((ssttrriinngg ppaarraamm))
       Return the armour class of this object. If called with a string
       parameter, then one particular ac is returned (ie, query_ac('fire')
       returns the armour's fire ac).

       If called without any parameters and there are any modifiers defined,
       the  object's entire ac mapping is returned. Otherwise, the base ac is
       returned.

       Definition at line 27 of file inherit/armour.c.

   iinntt qquueerryy__aarrmmoouurr (())
       RReettuurrnnss::
           True, indicating that this object is armour.

       Definition at line 298 of file battle/armour.c.

   iinntt qquueerryy__aarrmmoouurr (())
       RReettuurrnnss::
           True, indicating that this object is armour.

       Definition at line 283 of file inherit/armour.c.

   vvaarraarrggss mmiixxeedd qquueerryy__rreeqquuiirreemmeenntt ((ssttrriinngg rreeqq))
       Similar functionality to query_ac, only deals with the requirements to
       wear a armour (if any).

       Definition at line 64 of file battle/armour.c.

   vvaarraarrggss mmiixxeedd qquueerryy__rreeqquuiirreemmeenntt ((ssttrriinngg rreeqq))
       Similar functionality to query_ac, only deals with the requirements to
       wear a armour (if any).

       Definition at line 55 of file inherit/armour.c.

   vvaarraarrggss iinntt qquueerryy__rreeqquuiirreemmeennttss__mmeett ((oobbjjeecctt ppllaayyeerr,, iinntt ssiilleenntt))
       Returns the number of basic requirements the player does NOT meet in
       order to wear this armour. Returns 0 if the player may wear the armour.
       Returns -1 if player is not a valid object.

       PPaarraammeetteerrss::

       _p_l_a_y_e_r The player for whom you are doing a stat check against this
              armour.

       _s_i_l_e_n_t (Optional) If true, no message will be printed to the player if
              they cannot wear the armour. Otherwise, The player is told the
              reason that they can't wear the armour.

       Definition at line 82 of file battle/armour.c.

   vvaarraarrggss iinntt qquueerryy__rreeqquuiirreemmeennttss__mmeett ((oobbjjeecctt ppllaayyeerr,, iinntt ssiilleenntt))
       Returns the number of basic requirements the player does NOT meet in
       order to wear this armour. Returns 0 if the player may wear the armour.
       Returns -1 if player is not a valid object.

       PPaarraammeetteerrss::

       _p_l_a_y_e_r The player for whom you are doing a stat check against this
              armour.

       _s_i_l_e_n_t (Optional) If true, no message will be printed to the player if
              they cannot wear the armour. Otherwise, The player is told the
              reason that they can't wear the armour.

       Definition at line 73 of file inherit/armour.c.

   vvaarraarrggss vvooiidd sseett__aacc ((mmiixxeedd oonnee,, iinntt ttwwoo))
       Laziness method for declaring base ac and ac modifiers in one shot.
       This  function takes several different possible sets of parameters and
       does  various wierd and unholy things to armour class depending on the
       sort of  input you give it.

       set_ac( 'fire',3 ) Would set the fire ac of the object to 3. This means
       that if the object  already has a base ac of 2, it would set
       ac_mod['fire'] to 1, or if the  base were 5, it would set the modifier
       to -2. Note that changing the base  ac afterward will affect the
       specific ac's set in the modifier mapping.

       set_ac( (['fire':3,'ice':2]) ) Would set the ac modifier mapping to the
       mapping given. No change is  made to base ac.

       set_ac( 3 ) This sets the base ac to 3. No changes are maded the the
       mod mapping.

       set_ac( (['fire':3]), 5 ) This is perhaps the most efficient way to set
       armour class. It sets the  base ac to 5 and then sets the fire ac to 3
       (by setting the modifier to  -2).

       Definition at line 252 of file battle/armour.c.

   vvaarraarrggss vvooiidd sseett__aacc ((mmiixxeedd oonnee,, iinntt ttwwoo))
       Laziness method for declaring base ac and ac modifiers in one shot.
       This  function takes several different possible sets of parameters and
       does  various wierd and unholy things to armour class depending on the
       sort of  input you give it.

       set_ac( 'fire',3 ) Would set the fire ac of the object to 3. This means
       that if the object  already has a base ac of 2, it would set
       ac_mod['fire'] to 1, or if the  base were 5, it would set the modifier
       to -2. Note that changing the base  ac afterward will affect the
       specific ac's set in the modifier mapping.

       set_ac( (['fire':3,'ice':2]) ) Would set the ac modifier mapping to the
       mapping given. No change is  made to base ac.

       set_ac( 3 ) This sets the base ac to 3. No changes are maded the the
       mod mapping.

       set_ac( (['fire':3]), 5 ) This is perhaps the most efficient way to set
       armour class. It sets the  base ac to 5 and then sets the fire ac to 3
       (by setting the modifier to  -2).

       Definition at line 242 of file inherit/armour.c.


AAUUTTHHOORR
       Generated automatically by Doxygen for Walraven from the source code.



Walraven                          8 Jan 2004                         Armour(3)
