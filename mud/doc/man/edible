Edible(3)                                                            Edible(3)



NNAAMMEE
       Edible -

SSYYNNOOPPSSIISS
       Inherited by Food.


   PPuubblliicc MMeetthhooddss
       string eeddiibbllee__iinnffoo ()
       int qquueerryy__iiss__eeddiibbllee ()
       int qquueerryy__iiss__ddrriinnkkaabbllee ()
       int qquueerryy__ffoooodd__vvaalluuee ()
       int qquueerryy__ddrriinnkk__vvaalluuee ()
       string qquueerryy__uussee__mmssgg ()
       sseett__eeddiibbllee (int x)
       sseett__ddrriinnkkaabbllee (int x)
       sseett__ffoooodd__vvaalluuee (int x)
       sseett__ddrriinnkk__vvaalluuee (int x)
       sseett__uussee__mmssgg (string x)
       int ddeeffaauullttss ()

   PPuubblliicc AAttttrriibbuutteess
       int eeddiibbllee
       int ddrriinnkkaabbllee
       int ffoooodd__vvaalluuee
       int ddrriinnkk__vvaalluuee
       string uussee__mmssgg

DDEETTAAIILLEEDD DDEESSCCRRIIPPTTIIOONN
       NNoottee::
           Average nutritional values for food will be: 1 - piece of candy 5 -
           tiny piece of fruit (2 grapes, 1 cherry, or half of a plum) 15 -
           normal piece of fruit (apple or orange) 25 - small meal-type item
           (sandwich, potato) 60 - large meal-type item (steak, loaf of bread)
           For food with special effects (diku based muds call them pills)
           such as stat bonuses, spells, poison, or anything other than simply
           increasing food/drink levels on the player... you will need to
           write an on_consume function on the individual food object, as the
           eat and  drink verbs will attempt to call it.

       Definition at line 15 of file edible.c.

MMEEMMBBEERR FFUUNNCCTTIIOONN DDOOCCUUMMEENNTTAATTIIOONN
   iinntt ddeeffaauullttss (())
       This function sets up some generic defaults for an item of food, might
       want to get rid of it later on, but it is convenient for now.

       Definition at line 59 of file edible.c.

       References set_edible(), set_food_value(), and set_use_msg().

   ssttrriinngg eeddiibbllee__iinnffoo (())
       This function is for keeping objedit happy.

       Definition at line 30 of file edible.c.

   iinntt qquueerryy__ddrriinnkk__vvaalluuee (())
       RReettuurrnnss::
           Amount of thirst healed by consuming this item.

       Definition at line 41 of file edible.c.

       References drink_value.

   iinntt qquueerryy__ffoooodd__vvaalluuee (())
       RReettuurrnnss::
           Amount of hunger healed by consuming this item.

       Definition at line 39 of file edible.c.

       References food_value.

   iinntt qquueerryy__iiss__ddrriinnkkaabbllee (())
       RReettuurrnnss::
           True if this item is drinkable.

       Definition at line 37 of file edible.c.

       References drinkable.

   iinntt qquueerryy__iiss__eeddiibbllee (())
       RReettuurrnnss::
           True if this item is edible.

       Definition at line 35 of file edible.c.

       References edible.

   ssttrriinngg qquueerryy__uussee__mmssgg (())
       RReettuurrnnss::
           The message displayed when this item is consumed.

       Definition at line 43 of file edible.c.

       References use_msg.

   sseett__ddrriinnkk__vvaalluuee ((iinntt xx))
       Set how much thirst this item heals.

       Definition at line 52 of file edible.c.

       References drink_value.

   sseett__ddrriinnkkaabbllee ((iinntt xx))
       Set whether or not this item may be drunk.

       Definition at line 48 of file edible.c.

       References drinkable.

   sseett__eeddiibbllee ((iinntt xx))
       Set whether or not this item may be eaten.

       Definition at line 46 of file edible.c.

       References edible.

       Referenced by defaults().

   sseett__ffoooodd__vvaalluuee ((iinntt xx))
       Set how much hunger this item heals.

       Definition at line 50 of file edible.c.

       References food_value.

       Referenced by defaults().

   sseett__uussee__mmssgg ((ssttrriinngg xx))
       Set the message displayed when this item is consumed.

       Definition at line 54 of file edible.c.

       References use_msg.

       Referenced by defaults().

MMEEMMBBEERR DDAATTAA DDOOCCUUMMEENNTTAATTIIOONN
   iinntt ddrriinnkk__vvaalluuee
       How much thirst does this item heal when consumed?

       Definition at line 25 of file edible.c.

       Referenced by query_drink_value(), and set_drink_value().

   iinntt ddrriinnkkaabbllee
       Can this item be drunk? 1 - yes, 0 - no.

       Definition at line 21 of file edible.c.

       Referenced by query_is_drinkable(), and set_drinkable().

   iinntt eeddiibbllee
       Can this item be eaten? 1 - yes, 0 - no.

       Definition at line 19 of file edible.c.

       Referenced by query_is_edible(), and set_edible().

   iinntt ffoooodd__vvaalluuee
       How much hunger does this item heal when consumed?

       Definition at line 23 of file edible.c.

       Referenced by query_food_value(), and set_food_value().

   ssttrriinngg uussee__mmssgg
       Message displayed when the item is consumed.

       Definition at line 27 of file edible.c.

       Referenced by query_use_msg(), and set_use_msg().


AAUUTTHHOORR
       Generated automatically by Doxygen for Walraven from the source code.



Walraven                          8 Jan 2004                         Edible(3)
