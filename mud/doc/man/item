Item(3)                                                                Item(3)



NNAAMMEE
       Item -

SSYYNNOOPPSSIISS
       Inherited by Food [private], LLiivviinngg, QQuuaannttiittyy, RReessoouurrccee, TTrriinnkkeett,
       WWeeaappoonn, and WWeeaappoonnOObbjj.


   PPuubblliicc MMeetthhooddss
       iitteemm__iinnffoo ()
       int qquueerryy__ddrrooppppaabbllee ()
       void sseett__ddrrooppppaabbllee (int n)
       int qquueerryy__ggeettttaabbllee ()
       void sseett__ggeettttaabbllee (int n)
       int qquueerryy__hhoollddaabbllee ()
       void sseett__hhoollddaabbllee (int n)
       int qquueerryy__hheelldd ()
       void sseett__hheelldd (int x)
       int qquueerryy__hheeiigghhtt ()
       void sseett__hheeiigghhtt (int n)
       int qquueerryy__hheelldd__wweeiigghhtt ()
       int qquueerryy__hheelldd__bbuullkk ()
       int qquueerryy__wweeiigghhtt ()
       int qquueerryy__uuss__wweeiigghhtt ()
       int qquueerryy__ttoottaall__wweeiigghhtt ()
       void sseett__wweeiigghhtt (int n)
       int qquueerryy__bbuullkk ()
       void sseett__bbuullkk (int n)
       int qquueerryy__vvaalluuee ()
       void sseett__vvaalluuee (int n)
       int qquueerryy__kkeepptt ()
       void sseett__kkeepptt (int n)
       int oonn__ggeett (object actor)
       int oonn__ddrroopp (object actor)
       int oonn__ggiivvee (object actor)
       void oonn__ppaaiinntt (object painter)
       void qquueerryy__nnoo__tteelleeppoorrtt ()
       void sseett__nnoo__tteelleeppoorrtt (int x)

   PPuubblliicc AAttttrriibbuutteess
       int hheeiigghhtt
       int vvaalluuee

DDEETTAAIILLEEDD DDEESSCCRRIIPPTTIIOONN
       This is a file which can give your object a value, the ability to be
       picked up, weight/bulk and dimensions. The units are: centimeters,
       grams, and cubic centimeters. To go from inches to centimeters,
       multiply by 2.54. To go from pounds to grams, multiply by 450. To go
       from cubic feet to cubic centimeters, multiply by 28,000.

       The value is in the smallest possible coin available on your mud --
       think of one-cent pieces.

       Definition at line 15 of file item.c.

MMEEMMBBEERR FFUUNNCCTTIIOONN DDOOCCUUMMEENNTTAATTIIOONN
   iitteemm__iinnffoo (())
       Information used by the object editor.

       Definition at line 30 of file item.c.

   iinntt oonn__ddrroopp ((oobbjjeecctt aaccttoorr))
       The default on_drop handler. It returns 0 (failure) if droppable is
       false, and MOVE_OK_FLAG (success) if droppable is set. The parameter is
       ignored. If you want something special to occur when you drop an item,
       you should override this function. This function also implements the
       item 'kept' semantics.

       Definition at line 284 of file item.c.

       References query_droppable(), and query_kept().

   iinntt oonn__ggeett ((oobbjjeecctt aaccttoorr))
       The default on_get handler. It returns 0 (failure) if gettable is
       false, and MOVE_OK_FLAG (success) if gettable is set. The parameter is
       ignored. If you want something special to occur when you get an item,
       you should override this function.

       Definition at line 271 of file item.c.

       References query_gettable().

   iinntt oonn__ggiivvee ((oobbjjeecctt aaccttoorr))
       The default on_give handler. It returns 0 (failure) if gettable or
       droppable is false, and MOVE_OK_FLAG (success) if either is true. The
       parameter is ignored. If you want something special to occur when you
       drop an item, you should override this function. This function also
       implements the item 'kept' semantics.

       Definition at line 298 of file item.c.

       References query_droppable(), query_gettable(), and query_kept().

   vvooiidd oonn__ppaaiinntt ((oobbjjeecctt ppaaiinntteerr))
       A default paint function for this object. You should override on_paint
       to get ride of this. The default icon is simply an asterisk '*' at
       whatever the object's position is.

       Reimplemented in PPllaayyeerr.

       Definition at line 310 of file item.c.

   iinntt qquueerryy__bbuullkk (())
       RReettuurrnnss::
           The bulk, in cubic centimeters, of this object. This assumes
           'stiff' bulk, so that if this item is a container, its bulk does
           not increase when you put things in. For 'flexible' bulk, where the
           bulk increases as you add things, you should overrides this and add
           qquueerryy__hheelldd__bbuullkk(()) into the total.

       Definition at line 141 of file item.c.

       Referenced by set_weight().

   iinntt qquueerryy__ddrrooppppaabbllee (())
       RReettuurrnnss::
           True, if this item may be dropped, false otherwise.

       Reimplemented in LLiivviinngg.

       Definition at line 35 of file item.c.

       Referenced by on_drop(), and on_give().

   iinntt qquueerryy__ggeettttaabbllee (())
       RReettuurrnnss::
           True, if this item may be picked up or received, false otherwise.

       Reimplemented in LLiivviinngg.

       Definition at line 45 of file item.c.

       Referenced by on_get(), and on_give().

   iinntt qquueerryy__hheeiigghhtt (())
       RReettuurrnnss::
           The height in centimeters of this object.

       Definition at line 79 of file item.c.

       References height.

       Referenced by set_weight().

   iinntt qquueerryy__hheelldd (())
       RReettuurrnnss::
           The body part that is holding this item.

       Reimplemented in LLiivviinngg.

       Definition at line 65 of file item.c.

       Referenced by set_held().

   iinntt qquueerryy__hheelldd__bbuullkk (())
       RReettuurrnnss::
           The bulk of the *contents* of this object.

       Definition at line 99 of file item.c.

   iinntt qquueerryy__hheelldd__wweeiigghhtt (())
       RReettuurrnnss::
           The weight of the *contents* of this object.

       Definition at line 89 of file item.c.

       Referenced by query_total_weight().

   iinntt qquueerryy__hhoollddaabbllee (())
       RReettuurrnnss::
           True, if this item may be equipped by holding.

       Definition at line 55 of file item.c.

   iinntt qquueerryy__kkeepptt (())
       RReettuurrnnss::
           Whether or not the item is being 'kept'. Keeping an item is a  good
           way to prevent yourself from dropping it or giving it away by
           accident. Players can toggle this via the keep and unkeep commands.

       Definition at line 166 of file item.c.

       Referenced by on_drop(), and on_give().

   vvooiidd qquueerryy__nnoo__tteelleeppoorrtt (())
       Returns whether or not this object is impossible for players to
       teleport. A value of 0 means that the object may be ported. A value of
       1 means that the object is permanently prevented from teleportation,
       and a value of -1 means that teleportation is being temporarily
       prevented.

       Definition at line 319 of file item.c.

   iinntt qquueerryy__ttoottaall__wweeiigghhtt (())
       RReettuurrnnss::
           The total weight, in grams, of this object. This includes both the
           weight of this object and of all objects contained inside of it.

       Definition at line 123 of file item.c.

       References query_held_weight(), and query_weight().

   iinntt qquueerryy__uuss__wweeiigghhtt (())
       RReettuurrnnss::
           The object's weight in POUNDS.

       Definition at line 114 of file item.c.

       References query_weight().

   iinntt qquueerryy__vvaalluuee (())
       RReettuurrnnss::
           The value, in the smallest unit of currency on the MUD, for this
           object

       Definition at line 151 of file item.c.

       References set_value(), and value.

   iinntt qquueerryy__wweeiigghhtt (())
       RReettuurrnnss::
           The weight, in grams, of this object.

       Definition at line 109 of file item.c.

       Referenced by Living::add_food(), Living::add_weight(),
       Living::query_drink_capacity(), Living::query_food_capacity(),
       query_total_weight(), query_us_weight(),
       Living::query_weight_capacity(), and set_weight().

   vvooiidd sseett__bbuullkk ((iinntt nn))
       PPaarraammeetteerrss::

       _n      The new bulk, in cubic centimeters, for this object

       Definition at line 146 of file item.c.

       Referenced by set_weight().

   vvooiidd sseett__ddrrooppppaabbllee ((iinntt nn))
       PPaarraammeetteerrss::

       _n      If 0, this item is undroppable, otherwise it's droppable.

       Definition at line 40 of file item.c.

   vvooiidd sseett__ggeettttaabbllee ((iinntt nn))
       PPaarraammeetteerrss::

       _n      If 0, this item is ungettable, otherwise it's gettable.

       Definition at line 50 of file item.c.

   vvooiidd sseett__hheeiigghhtt ((iinntt nn))
       PPaarraammeetteerrss::

       _n      The new height, in centimeters, for this object

       Definition at line 84 of file item.c.

       References height.

       Referenced by set_weight().

   vvooiidd sseett__hheelldd ((iinntt xx))
       PPaarraammeetteerrss::

       _x      The particular body part (hand) being used to hold this item.

       Reimplemented in LLiivviinngg.

       Definition at line 70 of file item.c.

       References query_held().

   vvooiidd sseett__hhoollddaabbllee ((iinntt nn))
       PPaarraammeetteerrss::

       _n      If 0, this item is unholdable, otherwise it's holdable.

       Definition at line 60 of file item.c.

   vvooiidd sseett__kkeepptt ((iinntt nn))
       PPaarraammeetteerrss::

       _n      0 to unkeep the item. 1 to keep it. See qquueerryy__kkeepptt(()).

       Definition at line 171 of file item.c.

   vvooiidd sseett__nnoo__tteelleeppoorrtt ((iinntt xx))
       PPaarraammeetteerrss::

       _x      0 to allow teleportation, +/-1 to disallow teleportation

       Definition at line 324 of file item.c.

   vvooiidd sseett__vvaalluuee ((iinntt nn))
       PPaarraammeetteerrss::

       _n      The new value, in the smallest unit of currency, for this object

       Definition at line 157 of file item.c.

       References value.

       Referenced by query_value().

   vvooiidd sseett__wweeiigghhtt ((iinntt nn))
       PPaarraammeetteerrss::

       _n      The new weight (mass, really), in grams, for this object

       Definition at line 128 of file item.c.

       References query_bulk(), query_height(), query_weight(), set_bulk(),
       and set_height().

       Referenced by Living::_create_living(), and Living::add_weight().

MMEEMMBBEERR DDAATTAA DDOOCCUUMMEENNTTAATTIIOONN
   iinntt hheeiigghhtt
       An item's statistics.

       Definition at line 27 of file item.c.

       Referenced by query_height(), and set_height().

   iinntt vvaalluuee
       An item's statistics.

       Definition at line 27 of file item.c.

       Referenced by Living::query_ac(), query_value(), and set_value().


AAUUTTHHOORR
       Generated automatically by Doxygen for Walraven from the source code.



Walraven                          8 Jan 2004                           Item(3)
