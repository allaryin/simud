GENERAL HELP
CONCEPT
~CHLPSIMud is based on Lars Pensjo's LP mud. Many of his original design concepts that still apply to SIMud:

 * A wizard can extend the game.

 * The game can be extended on fly, without rebooting the mud.

 * All objects are specified in interpreted C. The specifications are compiled (loaded) first time they are referenced. The language that defines objects are similar to C. It is interpreted.

 * There is no difference between types of objects. Rooms, players, and things are all just objects.

 * The rooms are just objects that define some commands like 'look', 'east', 'north' and such things. When the user then types 'north', the room function will do something to the player.

 * There is no player parser. All commands are defined by the objects. For example, the knife defines the command 'wield', and the leather jacket defines 'wear'. An object defines a command by associating it with a local function, defined in the object. When the user types that command, the corresponding function will be called. If the user types 'wear jacket', then "jacket" will be sent as an argument to the wear function in the jacket object. If the user types 'wear plate', the jacket wear function will detect that "plate" != "jacket", and return false. Then, another 'wear' command is tried, until success. When the user drops the jacket, all commands are removed that were associated with that object.

 * An object may define a function "heart_beat". It will be called every few seconds. This can be used for automoving monsters, torches burning down and time delayed traps.

 * There is a builtin ed-compatible editor for wizards creating objects. There are also Unix commands such as 'ls' and 'cat' available to wizards.~CDEF
